<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kikita &amp; Maps</title>
  
  <subtitle>For Tech and Fun</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.kikitamap.com/"/>
  <updated>2020-03-11T10:37:48.803Z</updated>
  <id>https://www.kikitamap.com/</id>
  
  <author>
    <name>Xiaoyan Mu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HERE mSDK - Map Rendering</title>
    <link href="https://www.kikitamap.com/2020/03/11/HmSDK_MapRendering/"/>
    <id>https://www.kikitamap.com/2020/03/11/HmSDK_MapRendering/</id>
    <published>2020-03-10T17:17:23.000Z</published>
    <updated>2020-03-11T10:37:48.803Z</updated>
    
    <content type="html"><![CDATA[<p>通过上一个<a href="http://kikitamap.com/2020/03/09/HmSDK_QuickStart/" target="_blank" rel="noopener">入门篇</a>，相信你已经对 HERE mSDK 有了一定的印象。<br>作为一个地图SDK，最基础最重要的功能首先是地图渲染， 那么今天我们仍然以 HERE mSDK （Premium Edition）为例一起了解下。在 HERE Location Services 中有一个 <a href="https://developer.here.com/documentation#maps_section" target="_blank" rel="noopener">Interactive Maps Service</a>，用于访问服务器端预渲染的瓦片服务/tile map， 这就是今天要用到的原料。</p><p>Let’s get our hands dirty ！<br>今天这篇我们先从最基础的 Map Rendering 和 Map Schemes 开始。 <code>AndroidXMapFragment</code> 类提供了交互式地图体验支持， 例如缩放、平移等等。<code>AndroidXMapFragment</code>初始化之后，可以通过<code>Map map = mapFragment.getMap();</code> 获取 <code>Map</code> 。<br><code>Map</code> 类中提供了很多 map attributes 帮助开发者确定地图的展示方式，例如：map center，zoom level,  tilt, orientation, map projection, map animation …… </p><blockquote><p>详见开发文档：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/maps.html" target="_blank" rel="noopener"><strong>Map</strong></a></p></blockquote><p>HERE Interactive Maps 提供了很多样式的地图外观（Map Scheme）可供选择，以满足不同审美和专题的需求。简而言之，地图数据是一套，皮肤可有很多种。 </p><blockquote><p>在开发者文档中，有一页图文可供参考：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/map-schemes.html" target="_blank" rel="noopener"><strong>Map Scheme</strong></a></p></blockquote><p>HERE 在 Github上有官方的示例代码库，这篇的相关示例可以在这个连接中找到：<a href="https://github.com/heremaps/here-android-sdk-examples/tree/master/map-attribute" target="_blank" rel="noopener"><strong>Map Attribute</strong></a></p><p>我在这个工程中稍作修改，增加了 Satallite Mode 和 Night Mode，  因为后者是最近备受欢迎的一种渲染方式，这么好看的地图不做在样例里觉得有点可惜。 Night Mode 一方面可以作为夜晚时段的地图展示，另一方面可以作为设备暗色主题搭配的地图显示。<br>另外，这个示例工程中，还包含了公交/Transit 主题地图的展示（None/公交站/公交线路），以及路况/Realtime Traffic Service 的展示 （Traffic Flow / Incident）。</p><p>Happy testing ^^</p><p><img src="http://kikitamap.com/images/blogImg/HmSDK_MapRendering.jpg" alt=""></p><p>如下是在 Nexus 10 模拟器中的录屏:</p><p><div id="video"><video width="550" height="854" controls autoplay muted><source src="http://kikitamap.com/images/blogImg/HmSDK_MapRenderingDemo.mp4" type="video/mp4"></video></div></p><style type="text/css">#video{width:550px; height:854px;background:#ffcccc;}</style>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过上一个&lt;a href=&quot;http://kikitamap.com/2020/03/09/HmSDK_QuickStart/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;入门篇&lt;/a&gt;，相信你已经对 HERE mSDK 有了一定的印象。&lt;br&gt;作为一个
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Mobile SDK" scheme="https://www.kikitamap.com/tags/Mobile-SDK/"/>
    
      <category term="Android" scheme="https://www.kikitamap.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Quick Start of HERE SDK for Android</title>
    <link href="https://www.kikitamap.com/2020/03/09/HmSDK_QuickStart/"/>
    <id>https://www.kikitamap.com/2020/03/09/HmSDK_QuickStart/</id>
    <published>2020-03-09T13:18:07.000Z</published>
    <updated>2020-03-09T13:56:06.343Z</updated>
    
    <content type="html"><![CDATA[<p>今天整理下 HERE SDK的入门攻略~</p><p>HERE mobile SDK 是HERE location Servie（HLS）产品家族中重要的一部分，支持 Android 和 iOS 两大主流系统；从功能上分为 Lite（旧版本称 Starter）和 Premium 两个license level，顾名思义，前者支持较轻量级的功能，后者具有更专业更高级的功能。具体的功能清单和版本对比，可以在点击 <a href="https://developer.here.com/products/here-sdk" target="_blank" rel="noopener">官网链接</a> 查到。</p><p>HERE Developer 网站提供免费测试账号，建议大家注册一个玩一玩。每个 <a href="https://developer.here.com/pricing" target="_blank" rel="noopener">Freemium Plan</a> 账号下的 Project 可以拥有 Rest API、JS API、mSDK、studio 等很多产品的测试权限。对于个人 developer 来说，我认为足矣。</p><blockquote><p><strong>Freemium Plan 福利内容</strong></p><p>Location Services</p><ul><li>250K Transactions per month</li><li>5K SDK Monthly Active Users</li><li>250 Assets per month</li><li>Pay per additional Transactions</li></ul><p>Studio</p><ul><li>2.5GB Data transfer per month</li><li>5GB Database storage per month</li><li>Pay per additional Data transfer or Database storage</li></ul></blockquote><h1 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h1><h2 id="获取Credentials及SDK安装包"><a href="#获取Credentials及SDK安装包" class="headerlink" title="获取Credentials及SDK安装包"></a>获取Credentials及SDK安装包</h2><p>登录 HERE Developer 账户之后，即可在自己创建的Project中生成每个产品对应的密钥/credentials。</p><p>在 SDK 密钥下方就有 SDK安装包可供下载。如下图即为 HERE mSDK （premium edition） 的示例：</p><p><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_keys.jpg" alt=""></p><h2 id="检查-System-Requirments"><a href="#检查-System-Requirments" class="headerlink" title="检查 System Requirments"></a>检查 System Requirments</h2><p>这是安装一切软件产品之前，仔细阅读<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/system-requirements.html" target="_blank" rel="noopener">官方系统要求</a>，永远是不错的选择。</p><h2 id="快速运行-Tutorial-Example"><a href="#快速运行-Tutorial-Example" class="headerlink" title="快速运行 Tutorial Example"></a>快速运行 Tutorial Example</h2><p>下载后的SDK 安装包中包含了 user guild，release notes，SDK libraries， tutorial example 这几大件。 如果要快速入门，tutorial example 运行起来是必须的啦。</p><p>这里假设大家使用的开发环境都是 <a href="https://developer.android.google.cn/studio" target="_blank" rel="noopener">Android Studio</a>， 解压缩 SDK 安装包后，开始吧！</p><ol><li><p>启动 Android Studio，选择 open an existing Android Studio project， 浏览至 tutorial example 所在目录， <code>.../HERE-sdk/tutorial/BasicMapSolution</code> 。 </p></li><li><p>接着会发现一条报错 <code>Error: Failed to resolve: :HERE-sdk:</code>， 这个不用担心，是因为 HERE SDK 的 libraries 默认没有包含在这个工程中。</p></li><li><p>在 <code>BasicMapSolution</code> 中的 <code>app</code> 文件夹下创建一个名为 <code>libs</code> 的文件夹，并将安装包中的 <code>HERE-sdk/libs</code> 下的 <code>HERE-sdk.aar</code> 复制到这里。上步遇到的问题就解决料。</p></li><li><p>检查 <code>app/build.gradle</code> 文件，确保如下内容已经包含：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">  flatDir &#123;</span><br><span class="line">    dirs <span class="string">'libs'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">  implementation(name:<span class="string">'HERE-sdk'</span>, ext:<span class="string">'aar'</span>)</span><br><span class="line">  <span class="comment">// Depending on your specific project configuration you may have other entries here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>准备许可。每个 application 都需要一套单独的credentials。需要注意：为app申请credentials时，填写的 package name 需要和注册的bundle identifier 完全一致。就这个 sample来说， 应该使用 package name：<code>com.here.android.tutorial</code> 。如果在文章的开始，你已经注册了credential，那也没有关系，在 developer 网站的 project 页面中，你还可以修改哦，同时密钥会重新刷一遍，请使用最新的。<br><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_PackageName.jpg" alt=""> </p></li><li><p>写入许可。 打开目录 <code>BasicMapSolution/app/src/main/</code> 下的<code>AndroidManifest.xml</code>文件。找到三行 <code>&lt;meta-data&gt;</code>开头的语句，填写 credentials 即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.appid"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_APP_ID&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.apptoken"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_APP_CODE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.license.key"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_LICENSE_KEY&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>连接设备，运行程序，Bingo ！</p></li></ol><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>测试过程中，不确定大家有没有遇到我曾遇到的问题？</p><p><code>This project uses AndroidX dependencies, but the &#39;android.useAndroidX&#39; property is not enabled. Set this property to true in the gradle.properties file and retry.</code></p><p>解决方法：</p><p>在sample project 中的 <code>gradle.properties</code>文件中，增加一句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.useAndroidX=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>最后上图，我手头没有 Android 设备，用了 Nexus 10 模拟器：</p><p><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_Run.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天整理下 HERE SDK的入门攻略~&lt;/p&gt;
&lt;p&gt;HERE mobile SDK 是HERE location Servie（HLS）产品家族中重要的一部分，支持 Android 和 iOS 两大主流系统；从功能上分为 Lite（旧版本称 Starter）和 Prem
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Mobile SDK" scheme="https://www.kikitamap.com/tags/Mobile-SDK/"/>
    
      <category term="Android" scheme="https://www.kikitamap.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>the Shade</title>
    <link href="https://www.kikitamap.com/2020/03/05/theShade/"/>
    <id>https://www.kikitamap.com/2020/03/05/theShade/</id>
    <published>2020-03-04T16:15:57.000Z</published>
    <updated>2020-03-04T17:41:30.984Z</updated>
    
    <content type="html"><![CDATA[<p>又是很久没来更新，以至于kikitamap.com这个域名因为没有续费而已经停用接近两周；要不是今晚忽然想写点什么，还不知道什么时候我才能发现。</p><p>工作结束了，宝贝睡下了，每到接近12点，似乎属于我自己的完整时间才开始展开。所以，我的母亲总是不解，为什么终于到了你的休息时间，反而又要”熬夜“ ？事情不能明天做吗？ 我总是无言以对，我这种矫情的时间独占需求，估计她不会理解，只好安抚她说马上就睡。大概，也不是所有人都有与自己独处的强需求。</p><p>我喜欢拍照，拍各种自认为有趣的东西，因此手机空间经常告急，只好翻一翻，删除一些不喜欢的或是没有什么内容的。忽然发现了这张很久前拍的。</p><p><img src="http://kikitamap.com/images/blogImg/SSN_theShade_20160403_TJWQ.jpg" alt=""></p><p>当时的场景是我在等人，刚好从站的位置，看到自己的影子叠在橱窗里的模特身上，感觉很有点意思，就顺手拍了下来。世间熙熙攘攘，我们大多数都是追寻成为模特壳子的样子；住在壳子里面的人的样子呢？ta们是同一个吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又是很久没来更新，以至于kikitamap.com这个域名因为没有续费而已经停用接近两周；要不是今晚忽然想写点什么，还不知道什么时候我才能发现。&lt;/p&gt;
&lt;p&gt;工作结束了，宝贝睡下了，每到接近12点，似乎属于我自己的完整时间才开始展开。所以，我的母亲总是不解，为什么终于到了
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://www.kikitamap.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>WiFi Network Positioning</title>
    <link href="https://www.kikitamap.com/2019/06/27/wlanNetworks/"/>
    <id>https://www.kikitamap.com/2019/06/27/wlanNetworks/</id>
    <published>2019-06-27T06:17:00.000Z</published>
    <updated>2019-07-17T02:35:03.621Z</updated>
    
    <content type="html"><![CDATA[<p>在设备开启WiFi之后，会对周边 WiFi Access Point (AP)进行扫描，并将这些可见WiFi名称推给用户供选择。这是几乎是我们的PC和手机的日常。 除了连接WiFi登录Internet 之外，实际上，我们还可以通过 WiFi AP进行定位。</p><p>定位和地图一直是紧密联系的，无论是面向消费者的第一人称应用，还是关于管理者的追踪需求。各大LBS厂商，早就提供了各种定位功能，尤其HERE，Positioning 历史可以追溯到 Nokia年代，包括基于 GPS，WiFi network，Cell Signal，Bluetooth 等各种信号源的定位能力。</p><p><br></p><h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul><li>除了Mobile Hotspot、WiFi Egg，大多数情况下 AP不会经常的移动， 这就为WiFi定位的基础参照位置信息；</li><li><p>理论上，每一个 AP 都有全球唯一标识符— mac地址；当然也不排除有重复mac的问题，至于如何去重和更新后端数据库就是 another story，这里不展开了；</p></li><li><p>设备WiFi扫描到AP即可同时获取AP的信息，信号的强度，mac地址（BSSID）等，无论是否连接上；</p></li><li>根据WiFi信号强度衰减和距离的函数，可以判断设备离AP的距离；如果多个AP存在，那么这多个圆相交的区域就可以判定设备的位置；</li></ul><p>从上面的原理可以看出，AP的位置越准确，设备扫描到的AP越多，那么设备的位置越准确。</p><p><br></p><h1 id="Quick-Testing"><a href="#Quick-Testing" class="headerlink" title="Quick Testing"></a>Quick Testing</h1><p>做个小测试，帮助快速理解。</p><p>假设已经拥有了 HERE Developer 账号和密钥，如果没有，这里 <a href="https://developer.here.com/?create=Freemium-Basic&amp;keepState=true&amp;step=account" target="_blank" rel="noopener">免费注册</a>。 </p><p>以我手头的 Windows 和 <a href="https://developer.here.com/documentation/positioning/topics/request-constructing.html" target="_blank" rel="noopener">HERE Positioning API</a> 的 WLAN Positioning为例。</p><p><br></p><p><strong>1</strong>   获取周边WiFi信息，可以使用 <code>netsh</code> 命令查到当前扫描到的AP。 </p><p>   <code>netsh wlan show networks mode=BSSID</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;netsh wlan show networks <span class="attribute">mode</span>=BSSID</span><br><span class="line"></span><br><span class="line">Interface name : Wi-Fi</span><br><span class="line">There are 18 networks currently visible.</span><br><span class="line"></span><br><span class="line">SSID 1 : guest</span><br><span class="line">   <span class="built_in"> Network type </span>           : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0a:69:6c:0c:08:c2</span><br><span class="line">         Signal             : 30%</span><br><span class="line">         Radio<span class="built_in"> type </span>        : 802.11n</span><br><span class="line">         Channel            : 11</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"></span><br><span class="line">SSID 18 : Regus-76</span><br><span class="line">   <span class="built_in"> Network type </span>           : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0c:d8:6c:9f:1e:80</span><br><span class="line">         Signal             : 68%</span><br><span class="line">         Radio<span class="built_in"> type </span>        : 802.11n</span><br><span class="line">         Channel            : 13</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br></pre></td></tr></table></figure><p><br></p><p><strong>2</strong>  使用收集到的 BSSID 发送类似 <a href="https://developer.here.com/documentation/positioning/topics/example-wlan.html" target="_blank" rel="noopener">这个示例</a> 中的请求即可，so easy!</p><p>   当然, 这只是 online WiFi positioning， 还有更黑科技的 offline positioning，有空再更。</p><p>   <br></p><p>   <br></p><p><strong>Demo Screenshot</strong></p><p>   Chian HLS JS API + Global Positioning API </p><p>   <img src="http://kikitamap.com/images/blogImg/wlanNetworks_CHLS.png" alt=""></p><p>   Global HLS Imagery View</p><p>   <img src="http://kikitamap.com/images/blogImg/wlanNetworks_imagary.png" alt=""></p><p>Have Fun！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在设备开启WiFi之后，会对周边 WiFi Access Point (AP)进行扫描，并将这些可见WiFi名称推给用户供选择。这是几乎是我们的PC和手机的日常。 除了连接WiFi登录Internet 之外，实际上，我们还可以通过 WiFi AP进行定位。&lt;/p&gt;
&lt;p&gt;定
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Network" scheme="https://www.kikitamap.com/tags/Network/"/>
    
      <category term="Positioning" scheme="https://www.kikitamap.com/tags/Positioning/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part4 Advanced Routing - 2</title>
    <link href="https://www.kikitamap.com/2019/05/12/Icecream_Part4-Adcanced-Routing_2/"/>
    <id>https://www.kikitamap.com/2019/05/12/Icecream_Part4-Adcanced-Routing_2/</id>
    <published>2019-05-12T05:32:37.000Z</published>
    <updated>2019-05-13T09:39:18.039Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇中，尝试给出三条备选路线方案，只是看看是不够的，还需要做些交互式的操作支持。</p><h3 id="1-Visual-Tweaks"><a href="#1-Visual-Tweaks" class="headerlink" title="1 Visual Tweaks"></a>1 Visual Tweaks</h3><p>首先，这里我们做点小小的视觉调整，让路线和位置更漂亮一点。例如：</p><p>给路线的加上半透明效果，在<code>drawRoute()</code>中增加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(strip, &#123;</span><br><span class="line">  style: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(0, 85, 170, 0.5)'</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>再给配送的起点、终点，快递员的当前位置赋予不同的显示符号，在<code>map.js</code>中修改<code>addMarker()</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">HEREMap.prototype.addMarker = <span class="function"><span class="keyword">function</span> (<span class="params">coordinates, icon</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Add an markerOptions object</span></span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;&#125;</span><br><span class="line">  <span class="comment">// three different icons for origin, destination and the user's current position</span></span><br><span class="line">  <span class="keyword">var</span> icons = &#123;</span><br><span class="line">    iceCream: &#123;</span><br><span class="line">      url: <span class="string">'./images/marker-gelato.svg'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    origin: &#123;</span><br><span class="line">      url: <span class="string">'./images/origin.png'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    destination: &#123;</span><br><span class="line">      url: <span class="string">'./images/destination.png'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (icons[icon]) &#123;</span><br><span class="line">    markerOptions = &#123;</span><br><span class="line">      icon: <span class="keyword">new</span> H.map.Icon(icons[icon].url, icons[icon].options)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions)</span><br><span class="line">  <span class="keyword">this</span>.map.addObject(marker)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> marker</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Route-Selection"><a href="#2-Route-Selection" class="headerlink" title="2  Route Selection"></a>2  Route Selection</h3><p>在显示的三条路线中，允许用户选择一条作为最佳选项，那么我们需要在onSuccess()中增加一个回调函数来实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">    <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.map.Group()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routes = result.response.route.map(<span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> routeLine = drawRoute(route)</span><br><span class="line">      routeLineGroup.addObject(routeLine)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        route: route,</span><br><span class="line">        routeLine: routeLine</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    map.addObject(routeLineGroup)</span><br><span class="line">    map.setViewBounds(routeLineGroup.getBounds())</span><br><span class="line"></span><br><span class="line">    onRouteSelection(routes[<span class="number">0</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了在地图上高亮出选中的路线，就需要给Polyline指定不同的制图符号，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLineStyles = &#123;</span><br><span class="line">  normal: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(0, 85, 170, 0.5)'</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;,</span><br><span class="line">  selected: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(255, 0, 0, 0.7)'</span>, <span class="attr">lineWidth</span>: <span class="number">7</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>路线选择的目的是为了允许用户用户点选prefer的道路，因此我们需要增加一个函数，允许渲染引擎更改道路的符号，<code>onRouteSelection()</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onRouteSelection = <span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'A route has been selected.'</span>, route)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了测试以上逻辑的正确与否，做个简单测试，在onSuccess()中调用onRouteSelection()，并且将返回结果中的第一条路线作为参数传入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pass the first route as argument for temperary testing</span></span><br><span class="line">onRouteSelection(routes[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>到这里，你可能会发现被选中的道路可能位于其他道路之下，因此在道路的公共部分出现了叠加的多层效果。为了确保所选道路在所有道路之上显示，我们可以设置下渲染顺序，即 z-index。如下例子中，10 为更接近上层的渲染顺序。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (selectedRoute) &#123;</span><br><span class="line">      selectedRoute.routeLine.setStyle(routeLineStyles.normal).setZIndex(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    route.routeLine.setStyle(routeLineStyles.selected).setZIndex(<span class="number">10</span>)</span><br><span class="line">    selectedRoute = route</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就清爽了很多。</p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_2.png" alt=""></p><h3 id="3-Route-Selection-Panel"><a href="#3-Route-Selection-Panel" class="headerlink" title="3 Route Selection Panel"></a>3 Route Selection Panel</h3><p>这一步我们最后完善与道路的“交互”。 增加一个小的面板指示已经选择的道路。我们将这一部分的功能也放到另外一个独立的脚本文件中，在 scripts目录下新建一个<code>routes_panel.js</code>的文件。当然，不要忘记在 html 页面中增加加载此脚本文件的语句。 <code>&lt;script src=&quot;scripts/routes_panel.js&quot;&gt;&lt;/script&gt;</code></p><p>另外，在html文件中需要增加一个容器来渲染路线选择面板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"route-panel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义 <em>HERERoutesPanel</em> 类，用于渲染路线选择面板中的内容，详见我的GitHub 中 <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/blob/master/Part4_Advanced_Routing_SS5_selectionPanel/scripts/routes_panel.js" target="_blank" rel="noopener"> <strong>routes_panel.js</strong></a> 的内容。</p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_Panel.png" alt=""></p><h3 id="4-Directions"><a href="#4-Directions" class="headerlink" title="4 Directions"></a>4 Directions</h3><p>HERE Routing API 也会返回自然语言形式的导航信息（direction information），继续再 <code>HERERoutesPanel</code>类中增加内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderRouteElement = <span class="function"><span class="keyword">function</span> (<span class="params">route, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routeSummary = route.route.summary</span><br><span class="line">    element.innerHTML = renderRouteTitle(routeSummary, i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> maneuvers = route.route.leg[<span class="number">0</span>].maneuver</span><br><span class="line">    element.innerHTML += renderManeuvers(maneuvers)</span><br></pre></td></tr></table></figure><p>上面代码中， <code>leg</code> 是什么？ 一个<code>leg</code>代表的是两个 waypoint之间的路线部分，求算一条路线至少要有起点和终点两个 waypoint，其他的waypoint 可以是途经点。见 Developer doc：<a href="https://developer.here.com/documentation/routing/topics/waypoints.html" target="_blank" rel="noopener">Waypoints</a> 。</p><p>看起来HERE已经提供了 pre-formatted maneuver instruction string，那么就直接用好了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderManeuvers = <span class="function"><span class="keyword">function</span> (<span class="params">maneuvers</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> [</span><br><span class="line">     <span class="string">'&lt;ol class="directions"&gt;'</span>,</span><br><span class="line">     maneuvers.map(<span class="function"><span class="keyword">function</span> (<span class="params">maneuver</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">'&lt;li&gt;'</span> + maneuver.instruction + <span class="string">'&lt;/li&gt;'</span></span><br><span class="line">     &#125;).join(<span class="string">''</span>),</span><br><span class="line">     <span class="string">'&lt;/ol&gt;'</span></span><br><span class="line">   ].join(<span class="string">''</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这篇Tutorial的原文巨长，看得我一度想放弃，因为最近工作忙碌的关系，断断续续总算看完了； 并且参照原文思路和示例代码review完结。</p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_Direction.png" alt=""></p><p><br></p><p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-4-advanced-routing" target="_blank" rel="noopener">Part4: Advanced Routing</a></p><p><em>complete code</em>   <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS5_selectionPanel" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在上一篇中，尝试给出三条备选路线方案，只是看看是不够的，还需要做些交互式的操作支持。&lt;/p&gt;
&lt;h3 id=&quot;1-Visual-Tweaks&quot;&gt;&lt;a href=&quot;#1-Visual-Tweaks&quot; class=&quot;headerlink&quot; title=&quot;1 Visual Twe
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Javascript" scheme="https://www.kikitamap.com/tags/Javascript/"/>
    
      <category term="Routing" scheme="https://www.kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part4 Advanced Routing - 1</title>
    <link href="https://www.kikitamap.com/2019/03/06/Icecream_Part4_Advanced_Routing_1/"/>
    <id>https://www.kikitamap.com/2019/03/06/Icecream_Part4_Advanced_Routing_1/</id>
    <published>2019-03-06T05:18:30.000Z</published>
    <updated>2019-04-29T05:36:32.340Z</updated>
    
    <content type="html"><![CDATA[<p>在 Part 3 中我们了解到如何调用 HERE Routing API 实现两点间路径规划，以及如何从当前位置出发规划路径。</p><p>这个部分继续来看看，如何展示多条路线及其信息，并允许用户交互选择。</p><h3 id="Pre-session-重构代码"><a href="#Pre-session-重构代码" class="headerlink" title="Pre-session: 重构代码"></a>Pre-session: 重构代码</h3><p>这一部分不是改进功能，而是整理思绪。磨刀不误砍柴工，放之四海而皆准。</p><p>冰淇凌小网页的功能不断增多，代码也随之膨胀，我们要时不时地整理收纳一下，避免自己在找乐子的路上备受打击。</p><p>在 Scripts 文件夹中，新建：</p><ul><li>map.js  用于存放和<strong>底图</strong>及<strong>绘制路线</strong>相关的逻辑；</li><li>utils.js  用于存放<strong>辅助功能</strong>，例如，将 latlog 坐标转化成 WayPointString 以供 Routing Service 使用。</li></ul><p>代码与Part 3 类似，但是因为做了重构，需要注意其中的调用关系及 html页面中的加载顺序。</p><p><em>complete code</em>  <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS1_refactor" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p><h3 id="Multiple-Routes"><a href="#Multiple-Routes" class="headerlink" title="Multiple Routes"></a>Multiple Routes</h3><p>在日常导航出行时，多给出几条路线供用户选择，也是一个极常见的需求。</p><p>使用 HERE Routing API 计算路线时，可在请求中加入参数 <code>alternatives</code> 来获得多个推荐路线。</p><p>alternatives: 2； 即，1 (primary) + 2 (alternatives) = 3  条路线。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HEREMap.prototype.drawRoute = <span class="function"><span class="keyword">function</span> (<span class="params">fromCoordinates, toCoordinates</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> routeOptions = &#123;</span><br><span class="line">        mode: <span class="string">'fastest;car'</span>,</span><br><span class="line">        representation: <span class="string">'display'</span>,</span><br><span class="line">        # add parameter</span><br><span class="line">        alternatives: <span class="number">2</span>,</span><br><span class="line">        waypoint0: Utils.locationToWaypointString(fromCoordinates),</span><br><span class="line">        waypoint1: Utils.locationToWaypointString(toCoordinates)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.routes = <span class="keyword">new</span> HERERoute(<span class="keyword">this</span>.map, <span class="keyword">this</span>.platform, routeOptions);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由于产生了多条道路，绘制道路的过程就要被执行多次，那么我们就把 <code>drawRoute</code> 函数挪到 <code>route.js</code> 中的 <code>HERERoute</code> 对象中，以供每次绘制道路调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Add drawRoute Function to HERERoute</span></span><br><span class="line">    <span class="keyword">var</span> drawRoute = <span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> routeShape = route.shape;</span><br><span class="line">        <span class="keyword">var</span> LineString = <span class="keyword">new</span> H.geo.LineString();</span><br><span class="line"></span><br><span class="line">        routeShape.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">point</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> parts = point.split(<span class="string">','</span>);</span><br><span class="line">            LineString.pushLatLngAlt(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(LineString, &#123;</span><br><span class="line">            style: &#123;</span><br><span class="line">                strokeColor: <span class="string">'blue'</span>,</span><br><span class="line">                lineWidth: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        map.addObject(routeLine);</span><br><span class="line">        <span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>与此同时，做 <code>onSuccess</code>函数的对应修改，在返回结果中依次调用 <code>drawRoute</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">       <span class="comment">// Simplify on success function</span></span><br><span class="line">       <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">           <span class="keyword">var</span> routes = result.response.route;</span><br><span class="line">           Setting view bounds</span><br><span class="line">           routes.forEach(drawRoute);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><p>Bingo！</p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Advanced_Routing.png" alt=""></p><h3 id="View-Bounds"><a href="#View-Bounds" class="headerlink" title="View Bounds"></a>View Bounds</h3><p>基本功能已实现，为了更好的体验，我们继续加工加工。</p><p>在 Part 3 中的我们通过 <code>setViewBounds</code>  将地图显示为路线的范围，在Part 4 中显然就不适用了，因为这样只会返回跳转到最后一条路线的范围。将所有的路线加入到一个组中，然后跳转组的范围，来解决这个问题。</p><p>对 <code>onSuccess</code> 进行修改：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">        <span class="keyword">var</span> routes = result.response.route;</span><br><span class="line">        <span class="comment">// Setting view bounds</span></span><br><span class="line">        <span class="comment">// routes.forEach(drawRoute);</span></span><br><span class="line">        <span class="comment">// add all routes to a group</span></span><br><span class="line">        <span class="keyword">var</span> routeLines = routes.map(drawRoute);</span><br><span class="line">        <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.map.Group(&#123;</span><br><span class="line">            objects: routeLines</span><br><span class="line">        &#125;);</span><br><span class="line">        map.addObject(routeLineGroup);</span><br><span class="line">        map.setViewBounds(routeLineGroup.getBounds());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>同时移除 <code>drawRoute</code> 中原先的 <code>setViewBounds</code>语句，并向 <a href="https://developer.here.com/documentation/maps/topics_api/h-map-group.html" target="_blank" rel="noopener">H.map.Group</a> 容器中增加返回的route。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setting view bounds using Group bounds not the last route</span></span><br><span class="line"><span class="comment">// map.addObject(routeLine);</span></span><br><span class="line"><span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line"><span class="keyword">return</span> routeLine;</span><br></pre></td></tr></table></figure><p><br></p><p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-4-advanced-routing" target="_blank" rel="noopener">Part4: Advanced Routing</a></p><p><em>complete code</em>   <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS2_multiRoutes" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Part 3 中我们了解到如何调用 HERE Routing API 实现两点间路径规划，以及如何从当前位置出发规划路径。&lt;/p&gt;
&lt;p&gt;这个部分继续来看看，如何展示多条路线及其信息，并允许用户交互选择。&lt;/p&gt;
&lt;h3 id=&quot;Pre-session-重构代码&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Javascript" scheme="https://www.kikitamap.com/tags/Javascript/"/>
    
      <category term="Routing" scheme="https://www.kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part3 Basic Routing</title>
    <link href="https://www.kikitamap.com/2019/03/05/Icecream_Part3_Basic_Routing/"/>
    <id>https://www.kikitamap.com/2019/03/05/Icecream_Part3_Basic_Routing/</id>
    <published>2019-03-05T08:13:16.000Z</published>
    <updated>2019-04-02T07:48:56.420Z</updated>
    
    <content type="html"><![CDATA[<p>Part 1 中我们准备了底图，Part 2 中我们获取了位置，现在终于开张了，“您有新的  ‘ 饿了乎 ’  订单到了！”  我们给外卖小哥规划下路线吧！</p><h3 id="1-Routing-Service"><a href="#1-Routing-Service" class="headerlink" title="1 Routing Service"></a>1 Routing Service</h3><p>首先，HERE Map API 中提供了一个叫做 Platform 的类，实例化Platform后，我就可以借以访问 HERE Routing Service。 有关 Routing API 的帮助文档，点<a href="https://developer.here.com/documentation/routing/topics/what-is.html" target="_blank" rel="noopener">这里</a>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.service.Platform(&#123;</span><br><span class="line">app_id: <span class="string">'[YOUR APP ID HERE]'</span>,</span><br><span class="line">app_code: <span class="string">'[YOUR APP CODE HERE]'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = platform.getRoutingService();</span><br></pre></td></tr></table></figure><h3 id="2-Request-Route"><a href="#2-Request-Route" class="headerlink" title="2 Request Route"></a>2 Request Route</h3><p>在发请求之前，需要先至少定义起点和终点，或者必要的时候增加途经点，这些点是通过 <code>WayPointParameterType</code> 对象传递。</p><p>为了让代码更简洁易维护，我们在 <code>scripts</code> 目录下创建一个 <code>route.js</code>文件，取代开始直接在 <code>app.js</code>中直接调用 Routing Service 的繁琐。如下，在 route.js 中增加一个用于封装 底图、platform对象、路径规划参数的 <code>HERERoute</code>函数，这个函数也会在浏览器控制台返回简单的错误日志。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build a function to take the map and platform objects as parameters</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HERERoute</span> (<span class="params">map, platform, routeOptions</span>) </span>&#123;</span><br><span class="line"><span class="comment">// access the routing service by calling getRoutingService()</span></span><br><span class="line">    <span class="keyword">var</span> router = platform.getRoutingService();</span><br><span class="line"><span class="comment">// error handling    </span></span><br><span class="line">    <span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Route found!'</span>, result);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> onError = <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">'Oh no! There was some communication error!'</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    router.calculateRoute(routeOptions, onSuccess, onError);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="3-Drawing-the-Route"><a href="#3-Drawing-the-Route" class="headerlink" title="3 Drawing the Route"></a>3 Drawing the Route</h3><p>现在我们可以在控制台看到 response，<strong>如何将 route 绘制到地图上呢</strong>？</p><p>在成功返回结果的函数中增加如下代码，其中 Option_2 的部分用于实现向地图绘制路径：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// Option_1 Simply put the response to the console log</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Route found!'</span>, result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Option_2 Furtherly draw the response to the map</span></span><br><span class="line">        <span class="keyword">var</span> route,</span><br><span class="line">            routeShape,</span><br><span class="line">            startPoint,</span><br><span class="line">            endPoint,</span><br><span class="line">            lineString;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Just take the first Route in the array</span></span><br><span class="line">            route = result.response.route[<span class="number">0</span>];</span><br><span class="line">            routeShape = route.shape;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// H.geo.LineString is recommended, instead of H.geo.Strip in the offical demo code</span></span><br><span class="line">            lineString = <span class="keyword">new</span> H.geo.LineString();</span><br><span class="line">            routeShape.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">point</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> parts = point.split(<span class="string">','</span>);</span><br><span class="line">                lineString.pushLatLngAlt(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Utilize H.map.Polyline to draw a blue line</span></span><br><span class="line">            <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(lineString, &#123;</span><br><span class="line">                style: &#123;</span><br><span class="line">                    strokeColor: <span class="string">'blue'</span>,</span><br><span class="line">                    lineWidth: <span class="number">10</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            map.addObject(routeLine);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// update the map bounds to that of our route</span></span><br><span class="line">            map.setViewBounds(routeLine.getBounds());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><blockquote><p><strong>备注</strong></p><ul><li>原文写得早一些，示例代码中 <code>H.geo.Strip</code>类已经从 HERE Maps JS API v3.0.15.0 及之后弃用了，需要使用 <code>H.geo.LineString</code> 类来替换。详情点 <a href="https://developer.here.com/documentation/maps/topics_api/h-geo-strip.html" target="_blank" rel="noopener">这里</a> 。</li><li>如上代码是我修改后的版本。</li></ul></blockquote><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part3_Basic_Routing.png" alt=""></p><h3 id="4-More"><a href="#4-More" class="headerlink" title="4 More"></a>4 More</h3><p>到 Steps 3 路径规划的功能基本实现了，Step 4 再增加一个获取当前位置作为起点，并将指定位置作为终点的功能吧。</p><p>例如，外卖小哥要给颐和园逛公园的小朋友送去冰凉可口的冰激凌……</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a small helper which converts a location into a waypoint</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">locationToWaypointString</span>(<span class="params">coordinates</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'geo!'</span> + coordinates.lat + <span class="string">','</span> + coordinates.lng;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set a flag called RouteRendered</span></span><br><span class="line"><span class="comment">// to ensure that the route is only rendered the first time</span></span><br><span class="line"><span class="keyword">var</span> routeRendered = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updatePosition</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    lat: event.coords.latitude,</span><br><span class="line">    lng: event.coords.longitude</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates);</span><br><span class="line">  map.addObject(marker);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If the route has not been rendered yet, </span></span><br><span class="line">  <span class="comment">// calculate and render it</span></span><br><span class="line">  <span class="keyword">if</span> (!routeRendered) &#123;</span><br><span class="line">    <span class="keyword">var</span> route = <span class="keyword">new</span> HERERoute(map, platform, &#123;</span><br><span class="line">      mode: <span class="string">'fastest;car'</span>,</span><br><span class="line">      representation: <span class="string">'display'</span>,</span><br><span class="line">      waypoint0: locationToWaypointString(coordinates),</span><br><span class="line">      waypoint1: locationToWaypointString(EndCoordinates)</span><br><span class="line">    &#125;);</span><br><span class="line">    routeRendered = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// request the user's current location</span></span><br><span class="line">navigator.geolocation.watchPosition(updatePosition);</span><br></pre></td></tr></table></figure><p>结果大概是这样：</p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part3_Basic_Routing_current.png" alt=""></p><blockquote><p>由于相关法律的限制，HERE Developer 网站中提供免费试用的中国境内的 HERE 在线地图是非常粗略的等级（Entry Level），如下代码仅为了展示功能，并不为了较真位置的精确程度。</p><p> 当然，精密级别的 China HERE Map 也已经上线了 ，并且有 <a href="https://developer.here.com/documentation?variant=cn" target="_blank" rel="noopener">China Spec HLS API</a> 可供使用，只是没有默认包含在<a href="https://developer.here.com/documentation?create=Freemium-Basic&amp;keepState=true&amp;step=terms" target="_blank" rel="noopener">Global Freemium licenses</a> 之中。如果需要试用评估或购买，需要通过 <a href="https://developer.here.com/contact-us#contact-sales" target="_blank" rel="noopener">商务途径</a>；也可以留言我，我也愿意帮助联系。</p></blockquote><p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-3-basic-routing" target="_blank" rel="noopener">Part3: Basic Routing</a></p><p><em>complete code</em>  <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part3_Basic_Routing" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Part 1 中我们准备了底图，Part 2 中我们获取了位置，现在终于开张了，“您有新的  ‘ 饿了乎 ’  订单到了！”  我们给外卖小哥规划下路线吧！&lt;/p&gt;
&lt;h3 id=&quot;1-Routing-Service&quot;&gt;&lt;a href=&quot;#1-Routing-Service
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Javascript" scheme="https://www.kikitamap.com/tags/Javascript/"/>
    
      <category term="Routing" scheme="https://www.kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part2 Geolocation</title>
    <link href="https://www.kikitamap.com/2019/03/05/Icecream_Part2_Geolocation/"/>
    <id>https://www.kikitamap.com/2019/03/05/Icecream_Part2_Geolocation/</id>
    <published>2019-03-05T07:52:54.000Z</published>
    <updated>2019-03-06T05:15:03.178Z</updated>
    
    <content type="html"><![CDATA[<p>在 Part 1 地图底图准备好的基础之上，我们增加一个获取浏览器当前位置并持续更新的功能，来解决“Where am I ？”的问题。</p><p>具体可以通过浏览器的 Geolocation API 来实现。在app.js 脚本中，使用 <code>navigator.geolocation</code> 对象来访问此API。 <code>navigator.geolocation</code> 对象有这样几个方法：<code>getCurrentPosition()</code>，<code>watchPosition()</code>，<code>clearWatch()</code>， 可以帮助我们实现开始的需求。</p><h3 id="1-获取位置"><a href="#1-获取位置" class="headerlink" title="1 获取位置"></a>1 获取位置</h3><p>首先，通过 <code>getCurrentPosition()</code> 一次性获取浏览器当前位置，在 app.js 中使用如下代码 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigator.geolocation.getCurrentPosition(success[, error[, options]]);</span><br></pre></td></tr></table></figure><p>各个浏览器都有 Geolocation API 的支持，建议参考相关的帮助文档。这个Demo建议在 Firefox 中测试，因为Chrome似乎禁用从本地文件访问位置。你可以根据需要增加获取位置是否成功后的行为，详情查看 <a href="https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions" target="_blank" rel="noopener">Firefox的开发者文档</a>。 </p><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part2_Geolocation.png" alt=""></p><h3 id="2-持续更新位置"><a href="#2-持续更新位置" class="headerlink" title="2 持续更新位置"></a>2 持续更新位置</h3><p><code>watchPosition()</code> 用于持续“关注” 客户端位置的变化，在每次变化之后，都会将新的位置返回。在 app.js 中增加如下代码，用于在当前位置不断地显示“冰激凌”。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updatePosition</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    lat: event.coords.latitude,</span><br><span class="line">    lng: event.coords.longitude</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> iconUrl = <span class="string">'./images/icecream.svg'</span>;</span><br><span class="line">  <span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line">    size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">    anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">    icon: <span class="keyword">new</span> H.map.Icon(iconUrl, iconOptions)</span><br><span class="line">  &#125;;</span><br><span class="line">   <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions);</span><br><span class="line">  map.addObject(marker);</span><br><span class="line">  map.setCenter(coordinates);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Action</span></span><br><span class="line">navigator.geolocation.watchPosition(updatePosition);</span><br></pre></td></tr></table></figure><p><img src="http://kikitamap.com/images/blogImg/Icecream_Part2_Geolocation_view.png" alt=""></p><p><em>original resource</em>    <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-2-geolocation" target="_blank" rel="noopener">Part2: Geolocation</a></p><p><em>complete code</em>    <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part2_Geolocation" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Part 1 地图底图准备好的基础之上，我们增加一个获取浏览器当前位置并持续更新的功能，来解决“Where am I ？”的问题。&lt;/p&gt;
&lt;p&gt;具体可以通过浏览器的 Geolocation API 来实现。在app.js 脚本中，使用 &lt;code&gt;navigator.
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Javascript" scheme="https://www.kikitamap.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part1 Basemap Setup</title>
    <link href="https://www.kikitamap.com/2019/03/05/Icecream_Part1_Basemap_Setup/"/>
    <id>https://www.kikitamap.com/2019/03/05/Icecream_Part1_Basemap_Setup/</id>
    <published>2019-03-05T07:20:58.000Z</published>
    <updated>2019-03-05T07:46:21.354Z</updated>
    
    <content type="html"><![CDATA[<p>Quick Start for HERE Map Javascript API</p><p>HERE 官网有一个很有趣的Tutorial， <strong>Who wants ice cream !?</strong> </p><p>如果你注册了HERE Developer 账号，很可能会被推送到这个教程的小广告。</p><p>假设你是冰激凌店的老板，那么用HERE Map 做个交互式的地图小网页，边测试边记录。</p><p><strong><em>Let’s get our hands dirty……</em></strong></p><h3 id="1-准备资源"><a href="#1-准备资源" class="headerlink" title="1. 准备资源"></a>1. 准备资源</h3><p>准备如下结构的目录和文件：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WhoWantsIceCream</span><br><span class="line"><span class="string">|--base_map_set_up.html</span></span><br><span class="line"><span class="string">|--scripts</span></span><br><span class="line"><span class="string">|--app.js</span></span><br><span class="line"><span class="string">|--images</span></span><br><span class="line"><span class="string">|--icecream.svg</span></span><br><span class="line"><span class="string">|--styles</span></span><br><span class="line"><span class="string">|--main.css</span></span><br></pre></td></tr></table></figure><h3 id="2-设计页面"><a href="#2-设计页面" class="headerlink" title="2.  设计页面"></a>2.  设计页面</h3><p>HTML 的 <code>head</code> 中引用 HERE Map JS API 以及必要的 CSS；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> Who Want's Icecream ? <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- HERE Javascript SDK modules --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-ui.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-core.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-service.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-ui.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Styles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"styles/main.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML的 <code>body</code> 中需要至少包含一个<code>div</code> ，用于作为 地图显示的容器； 以及引用<code>js</code>来完成 map 的规定动作。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Container for the map --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map-container"</span> <span class="attr">class</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Scripts --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"scripts/app.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-交互式地图底图"><a href="#3-交互式地图底图" class="headerlink" title="3. 交互式地图底图"></a>3. 交互式地图底图</h3><p><strong>增加如下内容到 app.js</strong> </p><p>1 从HERE Developer 网站申请账号，获取 APPID 和 APPCODE ，在初始化服务时使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get Map Container Element</span></span><br><span class="line"><span class="keyword">var</span> mapContainer = <span class="built_in">document</span>.getElementById(<span class="string">'map-container'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Specify the APPID &amp; APPCODE</span></span><br><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.service.Platform(&#123;</span><br><span class="line">  app_id: <span class="string">'oyNWTb---PMlrXxCH'</span>, <span class="comment">// // &lt;-- ENTER YOUR APP ID HERE</span></span><br><span class="line">  app_code: <span class="string">'_W_7qfgp-----tQQKkbLA'</span>, <span class="comment">// &lt;-- ENTER YOUR APP CODE HERE</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2 创建 Map 对象，并指定初始化时的位置、显示级别、底图样式…… everything as you wish……</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Displaying a Basic Map， Initialize Map Object</span></span><br><span class="line"><span class="comment">// Create Defaulr Layer</span></span><br><span class="line"><span class="keyword">var</span> defaultLayers = platform.createDefaultLayers();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Adjust the Map Center and the Initial Zoom Level </span></span><br><span class="line"><span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">  lat: <span class="number">52.530974</span>, <span class="comment">// HERE HQ in Berlin, Germany</span></span><br><span class="line">  lng: <span class="number">13.384944</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> mapOptions = &#123;</span><br><span class="line">  center: coordinates,</span><br><span class="line">  zoom: <span class="number">14</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> H.Map(</span><br><span class="line">  mapContainer,</span><br><span class="line">  defaultLayers.normal.map,</span><br><span class="line">  mapOptions);</span><br></pre></td></tr></table></figure><p>3  让地图动起来，至少可以平移缩放，很简单的一段即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Interacting with the map, at least move around and zoom in / out</span></span><br><span class="line"><span class="keyword">var</span> behavior = <span class="keyword">new</span> H.mapevents.Behavior(<span class="keyword">new</span> H.mapevents.MapEvents(map));</span><br></pre></td></tr></table></figure><p>4 给地图中心加个图标， 换成一个自定义的也成。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// Adding Markers to the Map</span></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom Icons for Markers</span></span><br><span class="line"><span class="keyword">var</span> iconUrl = <span class="string">'./images/icecream.svg'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line"><span class="comment">// The icon's size in pixel:</span></span><br><span class="line">  size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line"><span class="comment">// The anchorage point in pixel, </span></span><br><span class="line"><span class="comment">// defaults to bottom-center</span></span><br><span class="line">  anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">   icon: <span class="keyword">new</span> H.map.Icon(iconUrl, iconOptions)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions);</span><br><span class="line">map.addObject(marker);</span><br></pre></td></tr></table></figure><p>TIPS 加个监听，可以在你改变窗口尺寸的时候，自动更新地图的尺寸。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Set Event Listener to Make Map React Properly</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  map.getViewPort().resize();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这就完成 Interactive Basemap 了，Have fun！</p><p> <img src="http://kikitamap.com/images/blogImg/Icecream_Part1_Basemap_Setup.png" alt=""></p><p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-1-basic-map-set-up" target="_blank" rel="noopener">Part1: Basic Map Set-up</a></p><p><em>complete code</em>    <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part1_Basic_Map_Set_up" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Quick Start for HERE Map Javascript API&lt;/p&gt;
&lt;p&gt;HERE 官网有一个很有趣的Tutorial， &lt;strong&gt;Who wants ice cream !?&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;如果你注册了HERE Develop
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="HERE Map" scheme="https://www.kikitamap.com/tags/HERE-Map/"/>
    
      <category term="HLS" scheme="https://www.kikitamap.com/tags/HLS/"/>
    
      <category term="Javascript" scheme="https://www.kikitamap.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>解决七牛云存储bucket无法访问问题</title>
    <link href="https://www.kikitamap.com/2018/11/11/qiniuIssue/"/>
    <id>https://www.kikitamap.com/2018/11/11/qiniuIssue/</id>
    <published>2018-11-11T00:56:07.000Z</published>
    <updated>2018-11-13T04:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为工作的事情，最近忙于切换节奏适应新环境，有一个月没来 kikitaMap “巡检”了。果然昨天发现了小故障，七牛云存储的存储空间的临时域名失效了，之上的我的图床也就挂了。涉及到的对象：<a href="https://kikitamap.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/" target="_blank" rel="noopener">碎碎念</a> 、<a href="http://kikitamap.com/categories/%E7%9B%B8%E6%9C%BA%E9%87%8C/" target="_blank" rel="noopener">相机里</a> 中的全部图片和 <a href="https://kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/" target="_blank" rel="noopener">木工开物</a> 的小部分博客中图片。Just too bad …</p><h2 id="解决方法建议"><a href="#解决方法建议" class="headerlink" title="解决方法建议"></a>解决方法建议</h2><p>这种情况下只能发工单联系技术支持了，七牛的技术支持回复比较及时，给出了解决方案，如下：</p><blockquote><p>有两种方式来获取文件：</p><p>1.<br>您需要先新建一个同区域存储空间，会分配一个新的测试域名到新空间。<br>通过qshell batchcopy 到有域名的同区域空间然后再进行qdownload下载操作<br>1）<code>qshell listbucket 原bucket名 list.txt</code><br>​       （list出全部文件，<a href="https://github.com/qiniu/qshell/blob/master/docs/listbucket.md" target="_blank" rel="noopener">listbucket的文档</a>）<br>2）<code>cat list.txt | awk &#39;{print $1}&#39; &gt;list_final.txt</code><br>​       （用awk获取list结果的第一列）<br>3）<code>qshell batchcopy 原bucket名 新bucket名 list_final.txt</code><br>​       （复制到新bucket的文件和原bucket文件名一致，<a href="https://github.com/qiniu/qshell/blob/master/docs/batchcopy.md" target="_blank" rel="noopener">batchcopy的文档</a>）<br>4）<code>qshell qdownload newfilelist.txt</code><br>​      （newfilelist.txt为下载的<a href="https://github.com/qiniu/qshell/blob/master/docs/qdownload.md" target="_blank" rel="noopener">配置文档</a>）<br> <br>qshell安装包及文档请参考<br> <a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1302/qshell</a></p><p>如果您不熟悉命令行工具的安装使用，也可以结合文档最后提供的视频教程<br> <a href="https://developer.qiniu.com/kodo/tools/1302/qshell#9" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1302/qshell#9</a><br> <br>2.<br>使用工具qrsctl<br><a href="https://developer.qiniu.com/kodo/tools/1300/qrsctl" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1300/qrsctl</a><br><code>qrsctl get &lt;bucket&gt; &lt;file&gt; &lt;file&gt;</code></p></blockquote><h2 id="实践过程"><a href="#实践过程" class="headerlink" title="实践过程"></a>实践过程</h2><p>选择了第一种方式，问题解决，因为看起来像是批量的。</p><p>按照提示下载的zip包类似 qshell-v2.2.0.zip 这样的名字，里面包含了Windows，Linux，Mac各操作系统使用的程序。</p><p>我以Mac为例，使用Mac自带的 Commandline 访问解压之后的文件夹 qshell-v2.2.0。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kikitamoondeMBP:SoftwareSetup kikitamoon$ cd qshell-v2.2.0</span><br><span class="line">kikitamoondeMBP:qshell-v2.2.0 kikitamoon$ ls</span><br><span class="line">qshell-darwin-x64qshell-linux-x64qshell-windows-x64.exe</span><br><span class="line">qshell-linux-armqshell-linux-x86qshell-windows-x86.exe</span><br></pre></td></tr></table></figure><p>其中 qshell-darwin-x64 是Mac可用的 Qshell 版本。在使用Qshell之前需要配置账户信息，qshell account即可设置AK和SK。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64</span></span><br><span class="line">Use help or help [cmd1 [cmd2 [cmd3 ...]]] to see supported commands.</span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 account</span></span><br><span class="line">Open account file error, open /Users/kikitamoon/.qshell/account.json: no such file or directory, please use `account` to set AccessKey and SecretKey first</span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 account &lt;AK&gt; &lt;SK&gt;</span></span><br></pre></td></tr></table></figure><p>接着使用七牛技术支持给出的建议，将旧库的文件list出来，然后batchcopy到新库中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 listbucket kikitamapgallery list.txt</span></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> cat list.txt | awk <span class="string">'&#123;print $1&#125;'</span> &gt;list_final.txt</span></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 batchcopy kikitamapgallery kikitamapgallerycopy list_final.txt</span></span><br></pre></td></tr></table></figure><p>最后，通过 qdownload 命令下载所有源文件。在执行命令之前还需要做个配置文件，download.conf ; 并且可以设置开几个任务并行下载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 qdownload 4 download.conf</span></span><br><span class="line"></span><br><span class="line">Writing download log to file /Users/kikitamoon/.qshell/qdownload/7d41b43ca364d28da34dbd030f1331be/7d41b43ca364d28da34dbd030f1331be.log</span><br><span class="line">Downloading MGKW_ArcGIS_Daemon.png [1/62, 1.6%] ...</span><br><span class="line">Downloading MGKW_ArcMapStartupLog.png [2/62, 3.2%] ...</span><br><span class="line">Downloading MGKW_BatchClip.png [3/62, 4.8%] ...</span><br><span class="line">Downloading MGKW_FeatureTable.png [4/62, 6.5%] ...</span><br><span class="line">Downloading MGKW_HelloArcGISPythonAPI.png [5/62, 8.1%] ...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">Downloading XJL_TripToGreece.png [61/62, 98.4%] ...</span><br><span class="line">Downloading XJL_TripToHongkong.png [62/62, 100.0%] ...</span><br><span class="line">See download log at path /Users/kikitamoon/.qshell/qdownload/7d41b43ca364d28da34dbd030f1331be/7d41b43ca364d28da34dbd030f1331be.log</span><br><span class="line"></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"></span></span><br></pre></td></tr></table></figure><p>至此，源图片文件算是都找回来了。当然我还需要把我的网站中使用到旧地址的位置update一下喽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为工作的事情，最近忙于切换节奏适应新环境，有一个月没来 kikitaMap “巡检”了。果然昨天发现了小故障，七牛云存储的存储空间的临时域名失效了，之上的我的图床也就挂了。涉及到的对象：&lt;a href=&quot;https://kikitamap.com/categories/%
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Deployment" scheme="https://www.kikitamap.com/tags/Deployment/"/>
    
      <category term="Cloud Storage" scheme="https://www.kikitamap.com/tags/Cloud-Storage/"/>
    
      <category term="Webmaster" scheme="https://www.kikitamap.com/tags/Webmaster/"/>
    
  </entry>
  
  <entry>
    <title>矢量切片局部更新工具改进与工作收尾</title>
    <link href="https://www.kikitamap.com/2018/09/27/partialUpdateVTPKv3/"/>
    <id>https://www.kikitamap.com/2018/09/27/partialUpdateVTPKv3/</id>
    <published>2018-09-27T11:56:08.000Z</published>
    <updated>2018-11-12T15:11:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://kikitamap.com/2018/08/13/vectorTileBundle/" target="_blank" rel="noopener">上一篇博客</a>中提到工具还有投影坐标系支持和切片方案（.xml）自动获取的问题尚未解决，更新这篇的目的在于说明问题已经找到了workaround，并且新的版本已经在上周五（9.21）发布了。</p><h2 id="问题诊断过程"><a href="#问题诊断过程" class="headerlink" title="问题诊断过程"></a>问题诊断过程</h2><p>这两个问题其实本质上是一个问题。</p><p>我们知道，当需要生成矢量切片的地图的坐标系不是 3857（web mercator）时，ArcGIS Pro 提供的 Create Vector Tile Package / Index 工具可以自动生成与地图的坐标系统一致的切片方案（.xml）文件，默认放置于 C:\Users\当前用户\AppData\Local\ESRI\Geoprocessing 下。<br>这是个极好的功能，但是通过python调用此工具时，这个功能是没有提供接口的。此处的疑惑，也咨询了Esri US 的工程师，确实arcpy没有提供像工具UI中的自动计算功能。</p><p>在最初的版本中，我尝试使用arcpy.GenerateMapServerCacheTilingScheme_server() 来生成xml文件，可以应对地理坐标系的地图。也是这个过程中遇到了切片原点传参失败<a href="http://kikitamap.com/2018/02/05/AlterXMLScheme/" target="_blank" rel="noopener">这个坑</a>。<br>投影坐标系的切片原点不像是地理坐标系一样简单粗暴，不同的投影方法都会导致不同的原点坐标，我想过将常用坐标系枚举出来，可是从工具的通用角度来讲，不是个好事。最佳的解决方法还是想办法生成相同的xml，至少可以获取工具生成的xml。</p><p>在上个版本的局部更新矢量切片工具中，我和马老师还自命名了“Advanced Vector Tile Package”的矢量切片包，我们在矢量切片包中还打包塞入了切片方案和切片索引面。这样，局部工具在更新这种包时，可以自动解析原包获取xml和index。但是，需要用户事先使用我们定制的 Create Advanced Vector Tile Package 工具来创建矢量切片包。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>考虑到用户在更新矢量切片之前，已经做过该地图的矢量切片，那么在User那个目录下已经有了对应的xml文件，那么我只要代码中获取了地图的坐标系，然后按照xml的命名规则顺藤摸瓜并顺手牵羊即可。<br>现实总是比想象骨感。ArcGIS Pro 的 arcpy 中提供的 Map 对象竟然没有提供查询其坐标系统的属性或方法…… 测试基于ArcGIS Pro 2.2.1，写这篇时的最新版本。相信新的版本早晚会有的。好在我还是找到了一个workaround：从map的defaultCamera属性中获取，如下图左边最下部分所示。（现在没有测试环境，图出自讨论时的聊天记录，将就看吧）<br><img src="http://kikitamap.com/images/blogImg/partialUpdateVTPKv3_defaultCamera.jpg" alt=""></p><p>使用这个思路之后，解决了本文开头提到的问题，但是要求用户本机user目录下事先有相关的xml文件，没有的话需要打开创建矢量切片工具自动生产一次。</p><p>工具的相关代码都进行了更新，采用了新的逻辑，目前可以支持矢量切片工具自身支持的全部坐标系统。并同时保留了，上个版本的局部更新工具中可以自动解析 Advanced Vector Tile Package 功能。<br><img src="http://kikitamap.com/images/blogImg/partialUpdateVTPKv3_AdvancedSupport.jpg" alt=""></p><h2 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h2><p><strong>Latest Version</strong>： <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/3.1.0" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 3.1.0</a></p><h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>这个工具即与工作相关，又是业余之作。自己执念太重，希望在esri工作的最后一天归还机器前尽快改好发布出来，因为将来的投入时间和测试环境，不知道是否能够保证。自己可见的坑还是自己填好比较稳妥，哈。姑且把这个版本当成最后的latest版本吧。因为这个工具的更新，搞得最后一天的时间特别紧张，没有和很多同事道别，不过将来总有机会再见的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在&lt;a href=&quot;http://kikitamap.com/2018/08/13/vectorTileBundle/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上一篇博客&lt;/a&gt;中提到工具还有投影坐标系支持和切片方案（.xml）自动获取的问题尚未解决
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Raster" scheme="https://www.kikitamap.com/tags/Raster/"/>
    
      <category term="Geoprocessing" scheme="https://www.kikitamap.com/tags/Geoprocessing/"/>
    
      <category term="Python" scheme="https://www.kikitamap.com/tags/Python/"/>
    
      <category term="Vector Tiles" scheme="https://www.kikitamap.com/tags/Vector-Tiles/"/>
    
      <category term="Cloud Storage" scheme="https://www.kikitamap.com/tags/Cloud-Storage/"/>
    
  </entry>
  
  <entry>
    <title>Testing Report for Image Service</title>
    <link href="https://www.kikitamap.com/2018/08/30/cloudStorageImageService/"/>
    <id>https://www.kikitamap.com/2018/08/30/cloudStorageImageService/</id>
    <published>2018-08-30T03:30:40.000Z</published>
    <updated>2018-08-31T07:14:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>An image service of ArcGIS Server provides access to raster data through a web service.  ArcGIS Image Server is required to share a mosaic dataset.  This testing reporting indicates workflows and issues of sharing Image Service which is basing on a mosaic dataset referencing the raster dataset on a cloud storage.</p><p><strong>Local Testing Environment</strong></p><ul><li>Latest Esri Technologies<ul><li>ArcMap 10.6.1 ( both final release version and  early adopter version)</li><li>ArcGIS Enterprise 10.6.1 with ArcGIS Image Server 10.6.1</li></ul></li><li>Windows 10 Pro 64 bit English Version</li></ul><h2 id="Huawei-Cloud"><a href="#Huawei-Cloud" class="headerlink" title="Huawei Cloud"></a>Huawei Cloud</h2><p><strong>Steps</strong></p><ol><li><p>Create Huawei Cloud connection file                                                                (√)</p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_1Connection.png" alt=""></p></li><li><p>Add raster to a local mosaic dataset referencing the connection file          (√)</p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_2AddRaster.png" alt=""></p></li><li><p>Share the mosaic dataset as an image service                                                 (√)</p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_3Publishing.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_3Publishing2.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_4ServerMan.png" alt=""></p></li><li><p>Consume this service in various client browsers                                             (√)</p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_5MapViewer.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_6JSviewer.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_7ArcMap.png" alt=""></p></li></ol><h2 id="Alibaba-Cloud"><a href="#Alibaba-Cloud" class="headerlink" title="Alibaba Cloud"></a>Alibaba Cloud</h2><p><strong>Steps</strong></p><ol><li>Create Huawei Cloud connection file                                                                (√)</li><li>Add raster to a local mosaic dataset referencing the connection file          (√)</li><li>Share the mosaic dataset as an image service                                                 (√)</li><li>Consume this service in various client browsers                                             (×)</li></ol><p><strong>Explanation</strong></p><ul><li><p>It requires  EA version installed on English language windows OS to avoid the failure of step 1 and step 2.</p></li><li><p>Checkerboarding on image service at now. and new case summitted for diagnose this issue.</p><p><a href="https://my.esri.com/#/support/cases/02172207" target="_blank" rel="noopener">Internal Case #02172207</a> summited</p></li></ul><p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_8Issue.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;An image service of ArcGIS Server provides access to raster data through a web service.  ArcGIS Image Server is required to share a mosai
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Raster" scheme="https://www.kikitamap.com/tags/Raster/"/>
    
      <category term="Geoprocessing" scheme="https://www.kikitamap.com/tags/Geoprocessing/"/>
    
      <category term="Python" scheme="https://www.kikitamap.com/tags/Python/"/>
    
      <category term="Cloud Storage" scheme="https://www.kikitamap.com/tags/Cloud-Storage/"/>
    
  </entry>
  
  <entry>
    <title>Testing Report for Raster Data Source in Cloud Storage</title>
    <link href="https://www.kikitamap.com/2018/08/15/cloudStorage4MD/"/>
    <id>https://www.kikitamap.com/2018/08/15/cloudStorage4MD/</id>
    <published>2018-08-15T01:50:20.000Z</published>
    <updated>2018-08-31T06:06:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>For the purpose of assisting and sharing ,  I will try to write in English. </p></blockquote><p>The new tool <strong>Create Cloud Storage Connection File</strong> is first introduced to ArcGIS Desktop 10.6.1 which is the latest version until now.  The <a href="file:///C:/Program%20Files/ArcGIS/Pro/Resources/Help/pro-app/tool-reference/data-management/create-cloud-storage-connection-file.htm" target="_blank" rel="noopener">Create Cloud Storage Connection File</a> tool creates a connection file (<strong>*.acs</strong>) for ArcGIS-supported cloud storage.  It allows existing raster geoprocessing tools to <strong>write</strong> cloud raster format (CRF) datasets into the cloud storage bucket or <strong>read</strong> raster datasets (not limited to CRF) stored in the cloud storage as input.</p><p>This is an amazing new feature of ArcGIS Desktop, including <strong>ArcMap 10.6.1</strong> and <strong>ArcGIS Pro 2.2</strong>.  The stuff from one of our partners and I are doing some researching on the new capability.  This article is something about the testing report, which indicates the feasibility of various workflows for adding raster datasets to mosaic dataset. </p><p><br></p><p><strong>Local Testing Environment</strong></p><ul><li><p>Latest Esri Technologies</p><ul><li><p>ArcMap 10.6.1</p></li><li><p>ArcGIS Pro 2.2.1</p></li></ul></li><li>Windows 10 Pro 64 bit English Version</li></ul><p><br></p><p><br></p><h2 id="Huawei-Cloud"><a href="#Huawei-Cloud" class="headerlink" title="Huawei Cloud"></a>Huawei Cloud</h2><h3 id="ArcMap"><a href="#ArcMap" class="headerlink" title="ArcMap"></a>ArcMap</h3><ul><li><p><strong>Steps</strong></p><ol><li>Create Huawei Cloud connection file                              (√)</li><li>Add raster to a local mosaic dataset                               (√)</li></ol></li><li><p><strong>Conclusion</strong></p><ul><li>Bingo !   This workflow for source raster dataset in Huawei Cloud is perfect.</li></ul></li></ul><h3 id="ArcGIS-Pro"><a href="#ArcGIS-Pro" class="headerlink" title="ArcGIS Pro"></a>ArcGIS Pro</h3><ul><li><p><strong>Steps</strong></p><ol><li><p>Create Huawei Cloud connection file                             (√)</p></li><li><p>Add Raster to Mosaic Dataset                                         (×)</p><ul><li><p>Error Message as below:</p><p>Failed to execute. Parameters are not valid.</p><p>Error: 000732  Input Data: Dataset …\HuaWeiConnection.acs\…LGN00_MTL.txt does not exist or is not supported</p></li></ul></li><li><p>Trying  workaround:  Add Raster to Mosaic Dataset using arcpy  (python 3.x for ArcGIS Pro).   </p><p>For the purpose of verification ,  Add Raster to Mosaic Dataset using arcpy  (python 2.x for ArcMap), it works.                                                                                (√) </p></li></ol></li><li><p><strong>Conclusion</strong></p><ul><li><p>It should be a bug of ArcGIS Pro,  that the  tool <strong>Add Rasters To Mosaic Dataset</strong> can not recognize the logical file path including cloud connection.  The tool will justify the path if it exists. The path containing cloud connection is a logical path , not a physical path.   The same input file path works in ArcMap.</p></li><li><p>Internal case submitted <a href="https://my.esri.com/#/support/cases/02166069" target="_blank" rel="noopener">#02166069</a>  - <em>closed</em></p><p>Related bug:  <em>BUG-000116191</em> </p><p>Workaround:  Store the rasters in the root of the bucket, and add them from that location. </p></li></ul></li></ul><p>   <br></p><h2 id="ALiBaBa-Cloud"><a href="#ALiBaBa-Cloud" class="headerlink" title="ALiBaBa Cloud"></a>ALiBaBa Cloud</h2><p>   In China, we also call it ALiYun.</p><h3 id="ArcMap-1"><a href="#ArcMap-1" class="headerlink" title="ArcMap"></a>ArcMap</h3><ul><li><p><strong>Steps</strong></p><ol><li><p>Create ALiBaBa Cloud connection file   (×)</p><p>The connection file was created,  but there was a warning:  <em>WARNING 002574: Could not connect to cloud storage</em>  in the log </p></li><li><p>Create a mosaic dataset in a local file geodatabase   (√)</p></li><li><p>Add raster to mosaic dataset   (×) </p><p>An error occurred:  <em>Error: 8004205f: No new mosaic dataset item was added.</em>  </p><p>This error may due to the warning before, I think.</p></li></ol></li><li><p><strong>Conclusion</strong></p><ul><li><p>It may be a bug related to creating connection file to ALiBaBa Cloud Storage.  ArcPy (python 27) for ArcMap didn’t work, either.</p></li><li><p>Extra diagnose</p><ul><li><p>Using Fiddler to capture the HTTP(S) requests…</p><p>I have used Fiddler Software to catch the HTTP(S) requests made by ArcMap, but nothing was found. I had enable the https capture before testing. At the same time , I checked the Windows Task Manager and Resource Monitor that there was a lot of network activities.</p></li><li><p>Using Wireshark to  capture the network transaction …</p><p>Bad TCP records were found.</p></li></ul></li></ul></li></ul><h3 id="ArcGIS-Pro-1"><a href="#ArcGIS-Pro-1" class="headerlink" title="ArcGIS Pro"></a>ArcGIS Pro</h3><ul><li><p><strong>Steps</strong></p><ol><li>Create ALiBaBa Cloud connection file                              (×)</li><li>Create a mosaic dataset in a local file geodatabase      (√)</li><li>Add raster to mosaic dataset                                             (×)</li></ol></li><li><p><strong>Conclusion</strong></p><ul><li>Same issue with using HUAWEI cloud source data, and the issue points to the tool not to the cloud itself.</li><li>ArcPy (python 36) for ArcGIS Pro didn’t work, either.</li></ul></li></ul><p>Internal case submitted  <a href="https://my.esri.com/#/support/cases/02157762" target="_blank" rel="noopener">#02157762</a></p><p>Related bug:  <em>BUG-000116297</em></p><p>Workaround:  Internal Version 9226</p><p><br></p><h2 id="Custom-Cloud"><a href="#Custom-Cloud" class="headerlink" title="Custom Cloud"></a>Custom Cloud</h2><p>using s3 compatible cloud, for example,  Tencent Cloud.</p><ul><li><p><strong>Steps</strong></p><ol><li>Create Tencent Cloud connection file using ArcPy (python 27) for ArcMap </li><li>Capture network interaction information using WireShark<ul><li>As Amazon Provider selected, the region and endpoint will request Amazon CNAME address. In this condition, I don’t think the custom cloud works for now.</li></ul></li></ol></li><li><p>Internal case submitted</p><p><a href="https://my.esri.com/#/support/cases/02157772" target="_blank" rel="noopener">#02157772 Can Service End Point parameter be customized by users when connecting to the cloud storage ?</a> </p></li></ul><p><br></p><h2 id="Other-Issue"><a href="#Other-Issue" class="headerlink" title="Other Issue"></a>Other Issue</h2><p>failure with file Geodatabase transfer</p><ul><li><p><strong>Details</strong></p><p>When the file geodatabase was copied to a new location ,which was some scheme of path as before, on the other new machine . The mosaic dataset didn’t show up the source raster data at all. </p></li><li><p>Internal case submitted</p><p><a href="https://my.esri.com/#/support/cases/02165287" target="_blank" rel="noopener">#02165287 how to transfer mosaic dataset referencing raster dataset in cloud storage</a> </p></li></ul><p><br></p><p><br></p><p>The information above is valid as the day it published, I will try my best to have it up to date.</p><p>Thank you for reviewing.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;For the purpose of assisting and sharing ,  I will try to write in English. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The new tool &lt;strong&gt;Creat
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Raster" scheme="https://www.kikitamap.com/tags/Raster/"/>
    
      <category term="Geoprocessing" scheme="https://www.kikitamap.com/tags/Geoprocessing/"/>
    
      <category term="Python" scheme="https://www.kikitamap.com/tags/Python/"/>
    
      <category term="Cloud Storage" scheme="https://www.kikitamap.com/tags/Cloud-Storage/"/>
    
  </entry>
  
  <entry>
    <title>探索矢量切片的Bundle</title>
    <link href="https://www.kikitamap.com/2018/08/13/vectorTileBundle/"/>
    <id>https://www.kikitamap.com/2018/08/13/vectorTileBundle/</id>
    <published>2018-08-13T02:13:29.000Z</published>
    <updated>2018-08-14T02:56:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么会有这个需求和想法呢？还是源自于 <a href="http://kikitamap.com/2018/07/20/lovelyGit/" target="_blank" rel="noopener"><strong>局部更新矢量切片</strong></a> 的想法，当我们遭遇一个海量矢量数据的矢量切片<strong>创建</strong>和<strong>更新</strong>任务时，希望尽可能少且尽可能准确地更新受影响的bundle，而不是全局，那么了解bundle的范围是十分必要的。在写上一篇<a href="http://kikitamap.com/2018/07/23/CompactCache/" target="_blank" rel="noopener"><strong>《紧凑型缓存技术小结》</strong></a>的时候，目的在于在其基础之上探索矢量切片的bundle。</p><p>为了确保单个bundle文件的矢量切片数据的完整性，每级每次至少需要更新一个bundle文件。当矢量切片的数据量不显著的时候，可能每级本身也就一个或几个bundle，那局部更新体现不出它的优势； 当某些等级（例如LOD比较大的级别）矢量切片bundle非常多的时候，如果更新的范围只影响了其中一个，或者几个文件时，局部更新是有必要的。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>参照栅格切片的 <a href="http://enterprise.arcgis.com/en/server/latest/publish-services/windows/inside-the-compact-cache-storage-format.htm" target="_blank" rel="noopener">帮助文档</a> 中明确说明的，  “A bundle contains up to 16,384 tiles. ”   那就是 128 × 128 的关系，照搬到矢量切片是否适用呢？ 通过验证，确实如此。</p><p>先上结论，第N级的矢量切片的bundle范围刚好是第N-7级的切片范围，如下图，红线是 level 6 的切片索引，刚好可以作为level 13 的bundle范围：</p><p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_bundlelevel.png" alt=""></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>为了做验证和测试，我用了美国大选的区块数据做实验，这个面数据包含182895条记录，节点较多，很适合做矢量切片。假设，需要更新的切片范围仅仅是密歇根湖的一角：</p><p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_UpdateDetails.png" alt=""></p><blockquote><p>PS：上图是完全由 ArcGIS Pro 制作导出的，使用到了 Layout , Extent Indicator; 从制图角度来说，ArcGIS Pro 是个非常好的桌面端应用，可以继承和超越ArcMap。 </p></blockquote><p>以13级为例，更新的这一角仅需替换一个bundle：</p><p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_BundleReplace.png" alt=""></p><p>那么自定义工具 Create Part Vector Tile Package 所要做的工作，逻辑就变得非常清晰，也就是通过用户提供的待更新区域（AOI）来计算每级被影响到的bundle文件的地理范围，从而进行bundle的替换工作；包含了为其服务的，解包、打包、解析类的工作。</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>Latest Version：</strong>   <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/2.1.1" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 2.1.1</a></p><p><strong>待解决的问题</strong>：</p><ul><li>投影坐标系和自定义坐标系支持</li><li>tile scheme 原生获取</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为什么会有这个需求和想法呢？还是源自于 &lt;a href=&quot;http://kikitamap.com/2018/07/20/lovelyGit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;局部更新矢量切片&lt;/strong&gt;&lt;/a&gt; 的想法
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="ArcGIS Pro" scheme="https://www.kikitamap.com/tags/ArcGIS-Pro/"/>
    
      <category term="ArcGIS Enterprise" scheme="https://www.kikitamap.com/tags/ArcGIS-Enterprise/"/>
    
      <category term="Web" scheme="https://www.kikitamap.com/tags/Web/"/>
    
      <category term="Vector Tiles" scheme="https://www.kikitamap.com/tags/Vector-Tiles/"/>
    
  </entry>
  
  <entry>
    <title>紧凑型缓存技术小结</title>
    <link href="https://www.kikitamap.com/2018/07/23/CompactCache/"/>
    <id>https://www.kikitamap.com/2018/07/23/CompactCache/</id>
    <published>2018-07-23T04:49:48.000Z</published>
    <updated>2018-07-31T05:05:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tiling-Scheme"><a href="#Tiling-Scheme" class="headerlink" title="Tiling Scheme"></a>Tiling Scheme</h2><p>每个缓存服务的切片目录中都会包含一个 <strong>Conf.xml</strong>，也是就是tile scheme 文件了。</p><p>这个文件包含了很多有关切片设置的信息：</p><ul><li>Spatial reference information</li><li>Tile origin</li><li>Tile width/height</li><li>DPI</li><li>LODs (Levels of detail - scales)</li><li>Tile Image format</li><li>Compression quality</li><li>Antialiasing settings</li><li>Storage method</li></ul><h2 id="Version-Issue"><a href="#Version-Issue" class="headerlink" title="Version Issue"></a>Version Issue</h2><p>紧凑型缓存的存储格式为<strong>.bundle</strong> 。但有时我们会看到缓存目录中包含<strong>.bundlx</strong> 这样的文件，这说明这些缓存是ArcGIS 10.2.2 或以下版本创建的。从 ArcGIS 10.3 开始，紧凑型缓存做了些改进， .bundlx（tile index information） 文件被包含到了 .bundle 文件中 ，从而进一步降低了文件的数量。</p><p>你可以在缓存服务的tiling scheme “<strong>Conf.xml</strong>“ 中查看确认：</p><p><em>10.3 or later (Compact cache V1)</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CacheStorageInfo</span> <span class="attr">xsi:type</span>=<span class="string">'typens:CacheStorageInfo'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">StorageFormat</span>&gt;</span>esriMapCacheStorageModeCompact<span class="tag">&lt;/<span class="name">StorageFormat</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PacketSize</span>&gt;</span>128<span class="tag">&lt;/<span class="name">PacketSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CacheStorageInfo</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>10.2.2 or former (Compact cache V2)</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">CacheStorageInfo</span> <span class="attr">xsi:type</span>=<span class="string">'typens:CacheStorageInfo'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">StorageFormat</span>&gt;</span>esriMapCacheStorageModeCompactV2<span class="tag">&lt;/<span class="name">StorageFormat</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PacketSize</span>&gt;</span>128<span class="tag">&lt;/<span class="name">PacketSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CacheStorageInfo</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>10.3 及之后版本的 ArcGIS Server 仍然可以使用低版本的生产的切片来运行现有服务。如果我们需要将低版本的缓存拷贝过来给高版本的服务用，要注意这个<code>&lt;StorageFormat&gt;</code>参数的一致性。</li><li>ArcToolbox工具 <strong>Upgrade Map Server Cache Storage Format</strong>  来升级缓存。升级的过程中不会重新创建切片，而是重组原有的切片。这个工具在ArcGIS Pro 中没有提供。目前，我们还只能使用ArcMap或者使用ArcGIS Server 带有的arcpy包，通过Python来调用。</li><li>不支持将高版本的切片供低版本软件使用。如果希望降级，可以使用 <strong>Export Map Server Cache</strong> 工具导出紧凑型切片。</li></ul><h2 id="Tile-Format"><a href="#Tile-Format" class="headerlink" title="Tile Format"></a>Tile Format</h2><p>Tile Format 是指存储切片使用了何种栅格格式，而不是切片文件的本身存储格式 / Storage Format ( Exploded / Compact )。</p><ul><li><p><strong>PNG</strong>   </p><p>ArcGIS 10.1开始引入的类型。选择这种类型，Server会自行确认每张切片的PNG位深，从而达到缩减磁盘占用的目的。在我们不确定使用何种PNG格式时，保持这个默认设置就不错。</p><p>如果磁盘空间不在考虑范围下，而希望优先考虑切片速度，那最好选择MIXED格式了。</p></li><li><p><strong>PNG8</strong></p><p>位深为8位的PNG图片格式；可以最多存储256色，支持布尔透明，磁盘空间占用小，并且无损。适合于颜色相对简单，并且需要透明背景的地图，例如公路数据切图。</p></li><li><p><strong>PNG24</strong></p><p>位深为24的PNG图片格式；可以最多支持约1600万色。当地图的色彩复杂程度超过256时，你就该考虑使用这个格式。但是，PNG24不支持透明，另外不建议在IE6及以前版本浏览器中使用。</p></li><li><p><strong>PNG32</strong></p><p>在PNG24的基础上增加了Alpha通道，因而增加了各种程度半透明的支持。当地图色彩复杂，并开启了抗锯齿功能，PNG32就是最佳选择了，并且PNG32在各个版本的浏览器中支持良好。</p></li><li><p><strong>JPEG</strong></p><p>当切片中不需要透明背景时，JPEG是最常用的切片格式，并且JPEG可以hold住大量的复杂色彩。例如，包含影像、符号化精细程度高的矢量地图都可以使用这个格式。</p><p>JPEG是种有损压缩格式，可以在1%-100%间设置压缩比率，默认值75%一般是显示质量和磁盘空间的最佳平衡。如果觉得噪点过多质量不够，可以调高这个百分比，但你需要在响应性能和图片质量之间做好博弈。</p></li><li><p><strong>MIXED</strong></p><p>顾名思义，混合格式，在切片不透明区域使用JPEG，在透明区域使用PNG32。这是种非常智能的搭配方案，降低硬盘占用的同时，很好的解决了例如在切片边缘需要的透明需求。</p></li><li><p><strong>LERC</strong></p><p>LERC是Esri自主研发的开源的有损压缩格式，点<a href="http://esri.github.io/lerc/" target="_blank" rel="noopener">这里</a>有更多信息。推荐用于位深较大的单波段影像或高程数据服务中，如浮点型，32-bit、16-bit、12-bit的数据。 官方声称，LERC压缩方法在压缩速度和压缩质量方面分别是LZ77的5-10倍。当LERC用于整型栅格数据时，损失率在0.99或更低，几乎可以视为无损压缩。</p><p>LERC压缩方式目前只支持Image Service ，而不支持 Map Service。</p></li></ul><h2 id="Performance-Suggestion"><a href="#Performance-Suggestion" class="headerlink" title="Performance Suggestion"></a>Performance Suggestion</h2><p>紧凑型切片比松散型切片有诸多有点，详见文末的官方文档。但不是说选了紧凑型切片性能就没有继续改善的余地了，下面的这些点也是提升切片性能的一些有效建议：</p><ul><li>地图数据尽可能使用本地数据，共享目录的数据切片时间可能会更长些；</li><li>尽可能的避免使用动态投影；</li><li>设置图层的可见比例尺；</li><li>谨慎设置反锯齿的级别，标注的反锯齿对切片性能影响甚微，但要素符号的反锯齿会显著增长切片的时长；</li><li>建议切片期间关闭防病毒等安全软件；</li><li>尽可能地使用MIXED格式</li><li>在切片之前为所有数据创建空间索引</li><li>CachingTools服务的最大实例数 = 核数 + 1，这是官方给出的最佳实践建议</li><li>降低日志的级别，如果在大量切图任务中把Server日志开到Debug或Verbose级别，会产生极大的资源浪费。</li></ul><h2 id="Tile-SuperTile-Bundle"><a href="#Tile-SuperTile-Bundle" class="headerlink" title="Tile|SuperTile|Bundle"></a>Tile|SuperTile|Bundle</h2><p>这三者的关系早在多年前就有大牛们探索发现过，见本文末的相关文章，文中有逻辑缜密且经得起时间检验的详细演绎过程……</p><p>简言之，他们的关系是个简单的数学关系，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果：</span><br><span class="line">    Tile = <span class="number">256</span> × <span class="number">256</span> pixel             <span class="comment"># 256×256 是ArcGIS Server默认的切片大小</span></span><br><span class="line">    Supertile = <span class="number">4096</span> × <span class="number">4096</span> pixel      <span class="comment"># 未开抗锯齿情况下是 4096×4096</span></span><br><span class="line">那么：</span><br><span class="line">Supertile = <span class="number">16</span> × <span class="number">16</span> Tile           </span><br><span class="line">已知：</span><br><span class="line">Bundle = <span class="number">128</span> × <span class="number">128</span> Tile            </span><br><span class="line">因此：</span><br><span class="line">Bundle 范围是 N<span class="number">-3</span> 级的 Supertile 的范围</span><br></pre></td></tr></table></figure><p>看图说话：</p><p><img src="http://kikitamap.com/images/blogImg/CompactCache_SupertileBundle.png" alt=""></p><blockquote><p><em>官方文档：</em></p><ul><li><a href="http://enterprise.arcgis.com/zh-cn/server/latest/publish-services/windows/inside-the-compact-cache-storage-format.htm" target="_blank" rel="noopener">了解紧凑型缓存存储格式</a></li></ul><p><em>相关文章：</em></p><ul><li><a href="http://blog.newnaw.com/?p=789" target="_blank" rel="noopener">菩提老王的葡萄架子：ArcGIS Server 10中的切图/缓存机制深入</a></li><li><a href="https://blog.csdn.net/warrenwyf/article/details/6069711" target="_blank" rel="noopener">牛魔王的作坊：ArcGIS 切片缓存紧凑文件格式分析与使用</a></li><li><a href="https://blog.csdn.net/arcgis_all/article/details/50536569" target="_blank" rel="noopener">ArcGIS产品与技术专栏：Esri中国ArcGIS for Server 10.3.X 新型紧凑型缓存的解读和应用</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Tiling-Scheme&quot;&gt;&lt;a href=&quot;#Tiling-Scheme&quot; class=&quot;headerlink&quot; title=&quot;Tiling Scheme&quot;&gt;&lt;/a&gt;Tiling Scheme&lt;/h2&gt;&lt;p&gt;每个缓存服务的切片目录中都会包含一个 &lt;strong
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
  </entry>
  
  <entry>
    <title>Contributing to Our Github Project</title>
    <link href="https://www.kikitamap.com/2018/07/20/lovelyGit/"/>
    <id>https://www.kikitamap.com/2018/07/20/lovelyGit/</id>
    <published>2018-07-20T09:47:40.000Z</published>
    <updated>2018-07-24T03:40:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇日记。</p><p>最近，终于把年初我和<a href="https://makeling.github.io/" target="_blank" rel="noopener">马老师</a>的脑洞项目 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools" target="_blank" rel="noopener"><strong>局部更新矢量切片</strong></a> 放在了大型程序员G友交流社区，开始出 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases" target="_blank" rel="noopener">release</a>了…… </p><p>在项目的开始，这个需求来自于用户的真实需求，如下是正经的背景信息：</p><blockquote><p>矢量切片是Esri在新版本中推出的一项亮点新技术，通过ArcGIS Pro中的Create Vector Tile Service工具生成切片包，再通过Portal发布成 Vector Tile Service，在前端支持各种应用，采用统一的接口进行调用，实现了一体化的平台应用解决方案。矢量切片技术充分利用GPU的渲染能力，以全新方式在设备、浏览器中以矢量的方式展现缓存地图。这项技术解决了传统基于栅格缓存切片展现地图存在的诸多问题：如设备分辨率对地图渲染效果的影响，缓存创建后无法再动态更改样式，生成缓存切片的周期过长，对硬件的需求过大等等。</p><p>众所周知，矢量切片包的生成速度相对于传统的栅格切片包具有指数极的性能提升，这也是体现矢量切片优越性的一个重要方面。对于一个常规数据量在100MB-10GB级的数据，全部生成一次矢量切片包的速度在分钟级。可能正是因为这个原因，截至目前最新版本（ArcGIS Pro 2.2），Esri仍未提供局部更新矢量切片包的功能。虽然矢量切片生成速度很快，但是到了TB级别的大数据来说，生成一次完整的切片包也是需要相当长的时间的，如果仅是更新了局部的小范围数据，那基于更新范围自动化更新矢量切片就是一个非常有实际应用价值的需求。 正是在这样的背景下，我们发起了创建自动化局部更新矢量切片工具的项目。</p><p>—— @马老师</p></blockquote><p>既然是两个人的项目，又会涉及很多版本的更新同步问题，<em>Why not Github</em> ？</p><p>我们一共设计了5个Python工具，用于扩展ArcGIS Pro的功能，分别实现原始矢量切片包的创建，局部矢量切片包的创建，以及矢量切片包的更新，矢量切片服务的更新，托管在阿里云平台的矢量切片服务的更新。</p><p>截止到今天的版本 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/1.1.0" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 1.1.0</a></p><p><strong>Mark：</strong></p><p>后续还有很多有待优化的关键点：</p><ul><li>Bundle空间范围的精确计算</li><li>LOD值的自动计算</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是一篇日记。&lt;/p&gt;
&lt;p&gt;最近，终于把年初我和&lt;a href=&quot;https://makeling.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;马老师&lt;/a&gt;的脑洞项目 &lt;a href=&quot;https://github.com/ma
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Python" scheme="https://www.kikitamap.com/tags/Python/"/>
    
      <category term="Web" scheme="https://www.kikitamap.com/tags/Web/"/>
    
      <category term="Vector Tiles" scheme="https://www.kikitamap.com/tags/Vector-Tiles/"/>
    
      <category term="Github" scheme="https://www.kikitamap.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>你知道 CityEngine 中的 Leaf Shape 吗？</title>
    <link href="https://www.kikitamap.com/2018/07/13/CELeafshape/"/>
    <id>https://www.kikitamap.com/2018/07/13/CELeafshape/</id>
    <published>2018-07-13T02:50:36.000Z</published>
    <updated>2018-07-13T06:29:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>CityEngine 的CGA建模过程是个不断迭代繁衍的过程，我们将这个过程想象成一棵树。</p><p>通过 Shapefile，File Geodatabase，AutoCAD DXF 这些矢量数据格式导入CityEngine中的2D基面（Footprint），通常称为 CityEngine <strong>Initial Shape</strong>，这是这棵树的根节点。通过CGA中的命令符 <code>--&gt;</code> ，将一个shape经过各种形状（Geometry）和位置（Pivot，Scope） 的函数操作，生成另一个shape。直到最后，模型建立，最终的shape节点，通常称为 CityEngine <strong>Leaf Shape</strong>。</p><blockquote><p>这个细节的概念，在2013年的开发者大会中提过一次，结合模型层次结构的幻灯片理解下：</p><p><img src="http://kikitamap.com/images/blogImg/CELeafShape_2013DS.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/CELeafShape_2013DS2.png" alt=""></p><p>完整的幻灯片可以点 <a href="https://github.com/kikitaMoon/kikitamap.github.io/blob/gh-pages/attaches/EsriChinaDevSum-2013-EsriCityEngine%E8%A7%84%E5%88%99%E5%BC%80%E5%8F%91-%E6%85%95%E6%99%93%E7%87%95.pdf" target="_blank" rel="noopener"><strong>这里</strong></a> 下载。</p></blockquote><p>为什么说是“迭代繁衍”？ 因为除了 Leaf Shape 之外的所有shape 在建模过程中都被紧跟它其后的shape替代而消亡了。</p><p>举例子，在这条规则中，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A --&gt; function() B </span><br><span class="line">      B  --&gt; function() C</span><br></pre></td></tr></table></figure><p>这条规则中 ，A shape 对象已经消亡被B替代，在后续的规则中无法再调用到 A， 如果希望取到与A相同的对象，就需要提前复制出来，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A --&gt; <span class="function">Anew <span class="title">function</span><span class="params">()</span> B            <span class="comment">//A被复制而创建了分支</span></span></span><br><span class="line"><span class="function">      B    --&gt; <span class="title">function</span><span class="params">()</span> C</span></span><br><span class="line"><span class="function">      Anew --&gt; <span class="title">function</span><span class="params">()</span> D</span></span><br></pre></td></tr></table></figure><p>了解了这些，那么我们可以进一步回答这个问题：“如何将CityEngine规则建模的模型导出成各组件独立存储的模型？”   </p><p>可以的，再导出FileGDB或 Scene Layer Package的时候选中 “<strong>One Feature per Leaf Shape</strong>” 即可。</p><p><img src="http://kikitamap.com/images/blogImg/CELeafShape_FGDB.png" alt="Export to FileGDB"></p><p><img src="http://kikitamap.com/images/blogImg/CELeafShape_SLPK.png" alt="Export to Scene Layer Package"></p><p>这些导出的模型数据拿到其他软件中使用，例如ArcGIS Pro，各组件即为不同的静态模型对象。</p><p><img src="http://kikitamap.com/images/blogImg/CELeafShape_Pro.png" alt=""></p><p><em>这个示例的CGA脚本在 <a href="https://github.com/kikitaMoon/BuildingCGA/tree/master/Demoforkikitamap.com/4-FloorsAsLeafshape" target="_blank" rel="noopener">我的<strong>Github</strong></a> 可以查看和下载。</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CityEngine 的CGA建模过程是个不断迭代繁衍的过程，我们将这个过程想象成一棵树。&lt;/p&gt;
&lt;p&gt;通过 Shapefile，File Geodatabase，AutoCAD DXF 这些矢量数据格式导入CityEngine中的2D基面（Footprint），通常称为
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="3D" scheme="https://www.kikitamap.com/tags/3D/"/>
    
      <category term="CityEngine" scheme="https://www.kikitamap.com/tags/CityEngine/"/>
    
      <category term="ArcGIS Pro" scheme="https://www.kikitamap.com/tags/ArcGIS-Pro/"/>
    
      <category term="CGA" scheme="https://www.kikitamap.com/tags/CGA/"/>
    
  </entry>
  
  <entry>
    <title>如何获取30天试用版 Esri CityEngine ？</title>
    <link href="https://www.kikitamap.com/2018/07/11/CEFreeTrial/"/>
    <id>https://www.kikitamap.com/2018/07/11/CEFreeTrial/</id>
    <published>2018-07-11T09:43:04.000Z</published>
    <updated>2018-07-11T09:31:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Esri CityEngine 是一款面向于大规模城市规划行业的，交互式、沉浸式高级三维建模软件，相比传统建模更加高效省时。 通过CityEngine我们可以基于现实世界的GIS数据，构造城市的现实状态，模拟城市的历史风貌，设计城市的未来蓝图。</p><p>如何申请Esri CityEngine 30天试用？</p><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>访问Esri官方试用地址：<a href="https://www.esri.com/en-us/arcgis/products/esri-cityengine/trial" target="_blank" rel="noopener">https://www.esri.com/en-us/arcgis/products/esri-cityengine/trial</a></p><p> 点击“<strong>Start CityEngine Trial</strong>”</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_Start.png" alt=""></p><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>创建一个Esri账号，点击“<strong>Create a Public Account</strong>”； 如果已经拥有过 Esri 账号，可以直接登录。</p><blockquote><p>PS：每个邮箱只能申请一次试用。请申请试用时，确保邮箱是第一次注册。</p><p>​         国内不建议使用Facebook和Google账户登录，避免后续登录的麻烦，你懂的。</p></blockquote><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_SignUp.png" alt=""></p><p>在新的创建账户的页面中添加，名字、姓氏、邮箱，点击创建账户按钮，直至收到如下提示。</p><blockquote><p>Thank you for signing up.</p><p>An e-mail has been sent to [上一步填写过的邮箱]</p></blockquote><h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>查看自己的邮箱，你会发现类似的一封，点击 “<strong>Activate Your Account</strong>”。</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_Activate.png" alt=""></p><p>在弹出页面中，填写标星号的必要信息，例如：用户名、密码、国家、安全问题。然后点击创建账户。</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_CreateUserName.png" alt=""></p><h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>选择几项附加信息，点击下一步，会看到最终的包含了类似 <strong><code>EVA123456789</code></strong> 格式授权码的页面。</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_IndustryInfo.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_EVAcode.png" alt=""></p><p>请记录这个号码以备后用。如果忘记了也没有关系，注册邮箱中也会收到一封 “<strong>Esri CityEngine Trial Confirmation</strong>”主题的邮件，可以查询。</p><h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>下载并安装 Esri CityEngine 2018 软件。</p><p>如果不确认自己的系统是否满足安装要求，请查看 <strong><a href="http://desktop.arcgis.com/en/cityengine/latest/get-started/esri-cityengine-system-requirements.htm" target="_blank" rel="noopener">Esri CityEngine 系统要求</a></strong> 。</p><p>大多数情况下，我们安装在 Windows 操作系统中；当然 CityEngine 也支持 Mac OS X，Linux。</p><p>安装过程简单，与常规应用程序无差，按向导下一步即可完成，不赘述。</p><h2 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h2><p>启动开始菜单 Esri CityEngine 目录下的 <strong>CityEngine 2018 Administrator</strong>。</p><p>选择左侧 CityEngine 节点，右边选择 <strong>高级版单机许可</strong>，点击下方的 “<strong>Authorize Now</strong>”。</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_AdvSingleUse.png" alt=""></p><p>按照默认设置，一直下一步，并填写带信号的信息即可。</p><p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Authorize.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Internet.png" alt=""></p><p>填写入CityEngine的授权号码，下一步，直至看到祝贺页面即授权成功。</p><p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_FillinEVA.png" alt=""></p><p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Congrs.png" alt=""></p><p>从开始菜单，启动CityEngine软件即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Esri CityEngine 是一款面向于大规模城市规划行业的，交互式、沉浸式高级三维建模软件，相比传统建模更加高效省时。 通过CityEngine我们可以基于现实世界的GIS数据，构造城市的现实状态，模拟城市的历史风貌，设计城市的未来蓝图。&lt;/p&gt;
&lt;p&gt;如何申请Esr
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="Deployment" scheme="https://www.kikitamap.com/tags/Deployment/"/>
    
      <category term="CityEngine" scheme="https://www.kikitamap.com/tags/CityEngine/"/>
    
  </entry>
  
  <entry>
    <title>在 CityEngine 中使用 Python</title>
    <link href="https://www.kikitamap.com/2018/04/10/pythonInCE/"/>
    <id>https://www.kikitamap.com/2018/04/10/pythonInCE/</id>
    <published>2018-04-10T09:40:11.000Z</published>
    <updated>2018-07-13T06:17:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>​        CityEngine的同义词几乎就是“规则建模”，规则指的是CGA脚本。说到脚本，很多用户又会联想到 Python， 衍生出来的问题就是，“CityEngine中是用python脚本建模吗？”  答案是No。</p><p>​         CityEngine中确实也引入了python，只不过使用python的姿势不是建模，而是自动化。通过python脚本，可以增强CityEngine的建模功能，自动化驱动脚本建模工作流，提高建模效率。我们既可以在控制台交互式执行python命令，也可以在python editor 中书写python执行文件，甚至可以将一些自定义功能扩展到CityEngine中。如下是CityEngine官方教程中的几个示例代码：</p><h2 id="Example-1-选择部分对象"><a href="#Example-1-选择部分对象" class="headerlink" title="Example 1  选择部分对象"></a>Example 1  选择部分对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-9</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectByAttribute</span><span class="params">(attr, value)</span>:</span></span><br><span class="line">    objects = ce.getObjectsFrom(ce.scene)</span><br><span class="line">    selection = []</span><br><span class="line">    <span class="keyword">for</span> o <span class="keyword">in</span> objects:</span><br><span class="line">        attrvalue = ce.getAttribute(o, attr)</span><br><span class="line">        <span class="keyword">if</span> attrvalue  ==  value:</span><br><span class="line">            selection.append(o)     </span><br><span class="line">    ce.setSelection(selection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    selectByAttribute(<span class="string">"connectionStart"</span>,<span class="string">"JUNCTION"</span>)</span><br></pre></td></tr></table></figure><h2 id="Example-2-修改对象属性"><a href="#Example-2-修改对象属性" class="headerlink" title="Example 2  修改对象属性"></a>Example 2  修改对象属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-9</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="string">''' increment the street width parameter of all selected street segments'''</span></span><br><span class="line"><span class="comment"># @noUIupdate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">incrementStreetWidths</span><span class="params">(increment)</span>:</span></span><br><span class="line">    selectedSegments = ce.getObjectsFrom(ce.selection, ce.isGraphSegment)</span><br><span class="line">    <span class="keyword">for</span> segment <span class="keyword">in</span> selectedSegments:</span><br><span class="line">        oldWidth = ce.getAttribute(segment, <span class="string">"/ce/street/streetWidth"</span>)</span><br><span class="line">        newWidth = oldWidth+increment</span><br><span class="line">        ce.setAttribute(segment, <span class="string">"/ce/street/streetWidth"</span>, newWidth)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    incrementStreetWidths(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h2 id="Example-3-动态模拟建筑物生长"><a href="#Example-3-动态模拟建筑物生长" class="headerlink" title="Example 3 动态模拟建筑物生长"></a>Example 3 动态模拟建筑物生长</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-12</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">growBuilding</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">14</span>):</span><br><span class="line">        height = <span class="number">20</span>+i</span><br><span class="line">        doStep(i,height,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>,<span class="number">35</span>):</span><br><span class="line">        height = <span class="number">34</span></span><br><span class="line">        width = i<span class="number">-14</span></span><br><span class="line">        doStep(i,height,width)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doStep</span><span class="params">(i,height,width)</span>:</span>    </span><br><span class="line">    object = ce.getObjectsFrom(ce.scene, ce.withName(<span class="string">"'Lot1'"</span>))</span><br><span class="line">    ce.setAttributeSource(object, <span class="string">"height"</span>, <span class="string">"OBJECT"</span>)</span><br><span class="line">    ce.setAttributeSource(object, <span class="string">"width"</span>, <span class="string">"OBJECT"</span>)</span><br><span class="line">    ce.setAttribute(object, <span class="string">"height"</span>, height)</span><br><span class="line">    ce.setAttribute(object, <span class="string">"width"</span>, width)  </span><br><span class="line">    Generate(object)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Generate</span><span class="params">(object)</span>:</span></span><br><span class="line">    ce.generateModels(object)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   growBuilding()</span><br></pre></td></tr></table></figure><h2 id="Example-4-陈列资源库"><a href="#Example-4-陈列资源库" class="headerlink" title="Example 4 陈列资源库"></a>Example 4 陈列资源库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-12</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeCGAlib</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># open the cga file to be written</span></span><br><span class="line">    cga = <span class="string">"/*Asset Library Loader : Generated by asset_lib.py*/\n version \"2014.0\"\n\n"</span>   </span><br><span class="line">    <span class="comment"># write start rule</span></span><br><span class="line">    cga += <span class="string">"Lot --&gt;  Geometries Textures"</span>  </span><br><span class="line">    <span class="comment"># write rule showing geometries</span></span><br><span class="line">    cga += <span class="string">"\n\nGeometries --&gt; "</span>   </span><br><span class="line">    <span class="comment"># get all .obj files from asset directory, and call their loader</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> ce.getObjectsFrom(<span class="string">"/"</span>, ce.isFile, ce.withName(<span class="string">"/Tutorial_10*/assets/*.obj"</span>)):    </span><br><span class="line">        <span class="comment"># and write </span></span><br><span class="line">        cga += <span class="string">"\n\t t(2,0,0)  Geometry(\""</span>+obj+<span class="string">"\")"</span></span><br><span class="line">        <span class="keyword">print</span> obj</span><br><span class="line">    <span class="comment"># write rule showing jpg textures</span></span><br><span class="line">    cga += <span class="string">"\n\nTextures --&gt; \n\ts(1,0,0) set(scope.tz,0) set(scope.ty,3) i(\"facades/xy-plane.obj\")"</span></span><br><span class="line">    <span class="comment"># get all .jpg files from asset directory, and call their loader</span></span><br><span class="line">    <span class="keyword">for</span> jpg <span class="keyword">in</span> ce.getObjectsFrom(<span class="string">"/"</span>, ce.isFile, ce.withName(<span class="string">"/Tutorial_10*/assets/*.jpg"</span>)):</span><br><span class="line">        cga += <span class="string">"\n\tt(2,0,0)  Texture(\""</span>+jpg+<span class="string">"\")"</span></span><br><span class="line">    <span class="comment">#write geometry loader rule</span></span><br><span class="line">    cga += <span class="string">"\n\n Geometry(asset) --&gt; s(1,0,0) i(asset) set(scope.ty,0) set(scope.tz,0)"</span></span><br><span class="line">    <span class="comment">#write texture loader rule</span></span><br><span class="line">    cga += <span class="string">"\n\n Texture(asset) --&gt; set(material.colormap, asset)"</span>    </span><br><span class="line">    cgafile = ce.toFSPath(<span class="string">"rules/asset_lib2.cga"</span>)</span><br><span class="line">    CGA = open(cgafile, <span class="string">"w"</span>)</span><br><span class="line">    CGA.write(cga)</span><br><span class="line">    CGA.close()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"written file "</span>+cgafile</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assignAndGenerateLib</span><span class="params">()</span>:</span></span><br><span class="line">    object = ce.getObjectsFrom(ce.scene, ce.withName(<span class="string">"'Lot2'"</span>))</span><br><span class="line">    ce.refreshWorkspace()</span><br><span class="line">    ce.setRuleFile(object, <span class="string">"asset_lib2.cga"</span>)</span><br><span class="line">    ce.setStartRule(object, <span class="string">"Lot"</span>)</span><br><span class="line">    ce.generateModels(object)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    writeCGAlib()</span><br><span class="line">    assignAndGenerateLib()</span><br></pre></td></tr></table></figure><h2 id="Example-5-扩展CityEngine功能"><a href="#Example-5-扩展CityEngine功能" class="headerlink" title="Example 5 扩展CityEngine功能"></a>Example 5 扩展CityEngine功能</h2><p>相关的python功能实现后，确保在CityEngine的python editor中可以正常运行。然后，在CityEngine的工作空间根目录创建 scripting.py 文件，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">sys.path.append(&#123;PATH_TO_YOUR_SCRIPTS_DIRECTORY&#125;)</span><br><span class="line"><span class="comment"># e.g. sys.path.append("C:\user\CityEngine\MyProject\scripts")</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import customized python module</span></span><br><span class="line"><span class="keyword">import</span> myEfficiencyModule</span><br></pre></td></tr></table></figure><p>重启CE之后，可以在python编辑器或控制台中直接使用此模块的功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>myEfficiencyModule.selectByAttribute(<span class="string">"connectionEnd"</span>, <span class="string">"JUNCTION"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        CityEngine的同义词几乎就是“规则建模”，规则指的是CGA脚本。说到脚本，很多用户又会联想到 Python， 衍生出来的问题就是，“CityEngine中是用python脚本建模吗？”  答案是No。&lt;/p&gt;
&lt;p&gt;​         CityEn
      
    
    </summary>
    
      <category term="木工开物" scheme="https://www.kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/"/>
    
    
      <category term="3D" scheme="https://www.kikitamap.com/tags/3D/"/>
    
      <category term="CityEngine" scheme="https://www.kikitamap.com/tags/CityEngine/"/>
    
      <category term="Python" scheme="https://www.kikitamap.com/tags/Python/"/>
    
      <category term="CGA" scheme="https://www.kikitamap.com/tags/CGA/"/>
    
  </entry>
  
  <entry>
    <title>Parthenon Temple</title>
    <link href="https://www.kikitamap.com/2018/04/04/Parthenon/"/>
    <id>https://www.kikitamap.com/2018/04/04/Parthenon/</id>
    <published>2018-04-04T04:00:00.000Z</published>
    <updated>2018-11-11T11:23:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摄于 2014-5-9, Acropolis, Athens, Greece</p></blockquote><p>CityEngine的教程中刚好有个Parthenon Temple 的 Demo</p><p><img src="http://kikitamap.com/images/blogImg/Parthenon_ParthenonModel.png" alt=""></p><p>不禁会想起在雅典卫城里它的断壁残垣，晒晒我们的合影</p><p>不知道几年过去，修复工作又向前推进了多少</p><p>那些带有编号的石头是不是已经归位了呢</p><p><img src="http://kikitamap.com/images/blogImg/Parthenon_Athens.jpg" alt=""></p><p>整个卫城中我最喜欢的是上图中最后一张的“厄瑞克忒翁神庙”，据说用于供奉雅典娜、波塞冬和英雄厄瑞克忒翁。</p><p>神庙一侧的女神柱像精致优美，即使经过了这么多的时光，都可以感受到雕刻师的精湛技艺。</p><p><img src="http://kikitamap.com/images/blogImg/Parthenon_IMG_3545.jpg" alt="厄瑞克忒翁神庙"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;摄于 2014-5-9, Acropolis, Athens, Greece&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CityEngine的教程中刚好有个Parthenon Temple 的 Demo&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http:
      
    
    </summary>
    
      <category term="相机里" scheme="https://www.kikitamap.com/categories/%E7%9B%B8%E6%9C%BA%E9%87%8C/"/>
    
    
      <category term="3D" scheme="https://www.kikitamap.com/tags/3D/"/>
    
      <category term="CityEngine" scheme="https://www.kikitamap.com/tags/CityEngine/"/>
    
  </entry>
  
</feed>
